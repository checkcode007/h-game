// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_game.proto

package com.z.model.proto;

public final class CommonGame {
  private CommonGame() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.z.model.proto.CardSuit}
   */
  public enum CardSuit
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *黑桃
     * </pre>
     *
     * <code>Spades = 0;</code>
     */
    Spades(0),
    /**
     * <pre>
     *红桃
     * </pre>
     *
     * <code>Hearts = 1;</code>
     */
    Hearts(1),
    /**
     * <pre>
     *方片
     * </pre>
     *
     * <code>Diamonds = 2;</code>
     */
    Diamonds(2),
    /**
     * <pre>
     *梅花
     * </pre>
     *
     * <code>Clubs = 3;</code>
     */
    Clubs(3),
    /**
     * <pre>
     *大王
     * </pre>
     *
     * <code>BigJoker = 100;</code>
     */
    BigJoker(100),
    /**
     * <pre>
     *小王
     * </pre>
     *
     * <code>SmallJoker = 200;</code>
     */
    SmallJoker(200),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *黑桃
     * </pre>
     *
     * <code>Spades = 0;</code>
     */
    public static final int Spades_VALUE = 0;
    /**
     * <pre>
     *红桃
     * </pre>
     *
     * <code>Hearts = 1;</code>
     */
    public static final int Hearts_VALUE = 1;
    /**
     * <pre>
     *方片
     * </pre>
     *
     * <code>Diamonds = 2;</code>
     */
    public static final int Diamonds_VALUE = 2;
    /**
     * <pre>
     *梅花
     * </pre>
     *
     * <code>Clubs = 3;</code>
     */
    public static final int Clubs_VALUE = 3;
    /**
     * <pre>
     *大王
     * </pre>
     *
     * <code>BigJoker = 100;</code>
     */
    public static final int BigJoker_VALUE = 100;
    /**
     * <pre>
     *小王
     * </pre>
     *
     * <code>SmallJoker = 200;</code>
     */
    public static final int SmallJoker_VALUE = 200;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CardSuit valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CardSuit forNumber(int value) {
      switch (value) {
        case 0: return Spades;
        case 1: return Hearts;
        case 2: return Diamonds;
        case 3: return Clubs;
        case 100: return BigJoker;
        case 200: return SmallJoker;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CardSuit>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CardSuit> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CardSuit>() {
            public CardSuit findValueByNumber(int number) {
              return CardSuit.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(0);
    }

    private static final CardSuit[] VALUES = values();

    public static CardSuit valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CardSuit(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.CardSuit)
  }

  /**
   * <pre>
   * 游戏类型
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.GameType}
   */
  public enum GameType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *为定义
     * </pre>
     *
     * <code>GAME_DEFUALT = 0;</code>
     */
    GAME_DEFUALT(0),
    /**
     * <pre>
     * 经典小码丽
     * </pre>
     *
     * <code>JINGDIAN_XIAOMALI = 1;</code>
     */
    JINGDIAN_XIAOMALI(1),
    /**
     * <pre>
     * 百变小码丽
     * </pre>
     *
     * <code>BAIBIAN_XIAOMALI = 2;</code>
     */
    BAIBIAN_XIAOMALI(2),
    /**
     * <pre>
     * 麻将2
     * </pre>
     *
     * <code>MAJIANG_2 = 3;</code>
     */
    MAJIANG_2(3),
    /**
     * <pre>
     * 捕鱼
     * </pre>
     *
     * <code>FISH = 4;</code>
     */
    FISH(4),
    /**
     * <pre>
     * 九线拉王
     * </pre>
     *
     * <code>JIUXIANLAWANG = 5;</code>
     */
    JIUXIANLAWANG(5),
    /**
     * <pre>
     * 水浒传
     * </pre>
     *
     * <code>SHUIHUZHUAN = 6;</code>
     */
    SHUIHUZHUAN(6),
    /**
     * <pre>
     * 阿拉丁
     * </pre>
     *
     * <code>ALADING = 7;</code>
     */
    ALADING(7),
    /**
     * <pre>
     * 百人牛牛
     * </pre>
     *
     * <code>BAIREN_NIUNIU = 8;</code>
     */
    BAIREN_NIUNIU(8),
    /**
     * <pre>
     * 冰球突破
     * </pre>
     *
     * <code>BINGQIUTUPO = 9;</code>
     */
    BINGQIUTUPO(9),
    /**
     * <pre>
     * 少林足球
     * </pre>
     *
     * <code>SHAOLIN_ZUQIU = 10;</code>
     */
    SHAOLIN_ZUQIU(10),
    /**
     * <pre>
     * 僵尸新娘
     * </pre>
     *
     * <code>JIANGSHIXINNIANG = 11;</code>
     */
    JIANGSHIXINNIANG(11),
    /**
     * <pre>
     * 金猪送福
     * </pre>
     *
     * <code>JINZHUSONGFU = 12;</code>
     */
    JINZHUSONGFU(12),
    /**
     * <pre>
     * 百变小码丽-高级玩法
     * </pre>
     *
     * <code>BAIBIAN_XIAOMALI_HIGHER = 102;</code>
     */
    BAIBIAN_XIAOMALI_HIGHER(102),
    /**
     * <pre>
     * 水浒传-&gt;小码丽-高级玩法
     * </pre>
     *
     * <code>SHUIHUZHUAN_HIGHER = 106;</code>
     */
    SHUIHUZHUAN_HIGHER(106),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *为定义
     * </pre>
     *
     * <code>GAME_DEFUALT = 0;</code>
     */
    public static final int GAME_DEFUALT_VALUE = 0;
    /**
     * <pre>
     * 经典小码丽
     * </pre>
     *
     * <code>JINGDIAN_XIAOMALI = 1;</code>
     */
    public static final int JINGDIAN_XIAOMALI_VALUE = 1;
    /**
     * <pre>
     * 百变小码丽
     * </pre>
     *
     * <code>BAIBIAN_XIAOMALI = 2;</code>
     */
    public static final int BAIBIAN_XIAOMALI_VALUE = 2;
    /**
     * <pre>
     * 麻将2
     * </pre>
     *
     * <code>MAJIANG_2 = 3;</code>
     */
    public static final int MAJIANG_2_VALUE = 3;
    /**
     * <pre>
     * 捕鱼
     * </pre>
     *
     * <code>FISH = 4;</code>
     */
    public static final int FISH_VALUE = 4;
    /**
     * <pre>
     * 九线拉王
     * </pre>
     *
     * <code>JIUXIANLAWANG = 5;</code>
     */
    public static final int JIUXIANLAWANG_VALUE = 5;
    /**
     * <pre>
     * 水浒传
     * </pre>
     *
     * <code>SHUIHUZHUAN = 6;</code>
     */
    public static final int SHUIHUZHUAN_VALUE = 6;
    /**
     * <pre>
     * 阿拉丁
     * </pre>
     *
     * <code>ALADING = 7;</code>
     */
    public static final int ALADING_VALUE = 7;
    /**
     * <pre>
     * 百人牛牛
     * </pre>
     *
     * <code>BAIREN_NIUNIU = 8;</code>
     */
    public static final int BAIREN_NIUNIU_VALUE = 8;
    /**
     * <pre>
     * 冰球突破
     * </pre>
     *
     * <code>BINGQIUTUPO = 9;</code>
     */
    public static final int BINGQIUTUPO_VALUE = 9;
    /**
     * <pre>
     * 少林足球
     * </pre>
     *
     * <code>SHAOLIN_ZUQIU = 10;</code>
     */
    public static final int SHAOLIN_ZUQIU_VALUE = 10;
    /**
     * <pre>
     * 僵尸新娘
     * </pre>
     *
     * <code>JIANGSHIXINNIANG = 11;</code>
     */
    public static final int JIANGSHIXINNIANG_VALUE = 11;
    /**
     * <pre>
     * 金猪送福
     * </pre>
     *
     * <code>JINZHUSONGFU = 12;</code>
     */
    public static final int JINZHUSONGFU_VALUE = 12;
    /**
     * <pre>
     * 百变小码丽-高级玩法
     * </pre>
     *
     * <code>BAIBIAN_XIAOMALI_HIGHER = 102;</code>
     */
    public static final int BAIBIAN_XIAOMALI_HIGHER_VALUE = 102;
    /**
     * <pre>
     * 水浒传-&gt;小码丽-高级玩法
     * </pre>
     *
     * <code>SHUIHUZHUAN_HIGHER = 106;</code>
     */
    public static final int SHUIHUZHUAN_HIGHER_VALUE = 106;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GameType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static GameType forNumber(int value) {
      switch (value) {
        case 0: return GAME_DEFUALT;
        case 1: return JINGDIAN_XIAOMALI;
        case 2: return BAIBIAN_XIAOMALI;
        case 3: return MAJIANG_2;
        case 4: return FISH;
        case 5: return JIUXIANLAWANG;
        case 6: return SHUIHUZHUAN;
        case 7: return ALADING;
        case 8: return BAIREN_NIUNIU;
        case 9: return BINGQIUTUPO;
        case 10: return SHAOLIN_ZUQIU;
        case 11: return JIANGSHIXINNIANG;
        case 12: return JINZHUSONGFU;
        case 102: return BAIBIAN_XIAOMALI_HIGHER;
        case 106: return SHUIHUZHUAN_HIGHER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GameType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GameType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameType>() {
            public GameType findValueByNumber(int number) {
              return GameType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(1);
    }

    private static final GameType[] VALUES = values();

    public static GameType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GameType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.GameType)
  }

  /**
   * Protobuf enum {@code com.z.model.proto.GameState}
   */
  public enum GameState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *等待玩家
     * </pre>
     *
     * <code>WAITING_FOR_PLAYE = 0;</code>
     */
    WAITING_FOR_PLAYE(0),
    /**
     * <pre>
     *下注阶段
     * </pre>
     *
     * <code>BETTING = 1;</code>
     */
    BETTING(1),
    /**
     * <pre>
     *发牌阶段
     * </pre>
     *
     * <code>DEALING = 2;</code>
     */
    DEALING(2),
    /**
     * <pre>
     *计算结果阶段
     * </pre>
     *
     * <code>RESULT = 3;</code>
     */
    RESULT(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *等待玩家
     * </pre>
     *
     * <code>WAITING_FOR_PLAYE = 0;</code>
     */
    public static final int WAITING_FOR_PLAYE_VALUE = 0;
    /**
     * <pre>
     *下注阶段
     * </pre>
     *
     * <code>BETTING = 1;</code>
     */
    public static final int BETTING_VALUE = 1;
    /**
     * <pre>
     *发牌阶段
     * </pre>
     *
     * <code>DEALING = 2;</code>
     */
    public static final int DEALING_VALUE = 2;
    /**
     * <pre>
     *计算结果阶段
     * </pre>
     *
     * <code>RESULT = 3;</code>
     */
    public static final int RESULT_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GameState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static GameState forNumber(int value) {
      switch (value) {
        case 0: return WAITING_FOR_PLAYE;
        case 1: return BETTING;
        case 2: return DEALING;
        case 3: return RESULT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GameState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GameState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameState>() {
            public GameState findValueByNumber(int number) {
              return GameState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(2);
    }

    private static final GameState[] VALUES = values();

    public static GameState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GameState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.GameState)
  }

  /**
   * <pre>
   * 房间类型
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.RoomType}
   */
  public enum RoomType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *初级
     * </pre>
     *
     * <code>ONE = 0;</code>
     */
    ONE(0),
    /**
     * <pre>
     *中级
     * </pre>
     *
     * <code>TWO = 1;</code>
     */
    TWO(1),
    /**
     * <pre>
     *高级
     * </pre>
     *
     * <code>THREE = 2;</code>
     */
    THREE(2),
    /**
     * <pre>
     *大师
     * </pre>
     *
     * <code>FOUR = 3;</code>
     */
    FOUR(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *初级
     * </pre>
     *
     * <code>ONE = 0;</code>
     */
    public static final int ONE_VALUE = 0;
    /**
     * <pre>
     *中级
     * </pre>
     *
     * <code>TWO = 1;</code>
     */
    public static final int TWO_VALUE = 1;
    /**
     * <pre>
     *高级
     * </pre>
     *
     * <code>THREE = 2;</code>
     */
    public static final int THREE_VALUE = 2;
    /**
     * <pre>
     *大师
     * </pre>
     *
     * <code>FOUR = 3;</code>
     */
    public static final int FOUR_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RoomType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RoomType forNumber(int value) {
      switch (value) {
        case 0: return ONE;
        case 1: return TWO;
        case 2: return THREE;
        case 3: return FOUR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RoomType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RoomType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RoomType>() {
            public RoomType findValueByNumber(int number) {
              return RoomType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(3);
    }

    private static final RoomType[] VALUES = values();

    public static RoomType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RoomType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.RoomType)
  }

  /**
   * <pre>
   *牛牛类型
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.NiuType}
   */
  public enum NiuType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 无牛
     * </pre>
     *
     * <code>NIU_ZERO = 0;</code>
     */
    NIU_ZERO(0),
    /**
     * <pre>
     * 牛一
     * </pre>
     *
     * <code>NIU_ONE = 1;</code>
     */
    NIU_ONE(1),
    /**
     * <pre>
     * 牛二
     * </pre>
     *
     * <code>NIU_TWO = 2;</code>
     */
    NIU_TWO(2),
    /**
     * <pre>
     * 牛三
     * </pre>
     *
     * <code>NIU_THREE = 3;</code>
     */
    NIU_THREE(3),
    /**
     * <pre>
     * 牛四
     * </pre>
     *
     * <code>NIU_FOUR = 4;</code>
     */
    NIU_FOUR(4),
    /**
     * <pre>
     * 牛五
     * </pre>
     *
     * <code>NIU_FIVE = 5;</code>
     */
    NIU_FIVE(5),
    /**
     * <pre>
     * 牛六
     * </pre>
     *
     * <code>NIU_SIX = 6;</code>
     */
    NIU_SIX(6),
    /**
     * <pre>
     * 牛七
     * </pre>
     *
     * <code>NIU_SEVEN = 7;</code>
     */
    NIU_SEVEN(7),
    /**
     * <pre>
     * 牛八
     * </pre>
     *
     * <code>NIU_EIGHT = 8;</code>
     */
    NIU_EIGHT(8),
    /**
     * <pre>
     * 牛九
     * </pre>
     *
     * <code>NIU_NINE = 9;</code>
     */
    NIU_NINE(9),
    /**
     * <pre>
     * 牛牛
     * </pre>
     *
     * <code>NIU_NIU = 10;</code>
     */
    NIU_NIU(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 无牛
     * </pre>
     *
     * <code>NIU_ZERO = 0;</code>
     */
    public static final int NIU_ZERO_VALUE = 0;
    /**
     * <pre>
     * 牛一
     * </pre>
     *
     * <code>NIU_ONE = 1;</code>
     */
    public static final int NIU_ONE_VALUE = 1;
    /**
     * <pre>
     * 牛二
     * </pre>
     *
     * <code>NIU_TWO = 2;</code>
     */
    public static final int NIU_TWO_VALUE = 2;
    /**
     * <pre>
     * 牛三
     * </pre>
     *
     * <code>NIU_THREE = 3;</code>
     */
    public static final int NIU_THREE_VALUE = 3;
    /**
     * <pre>
     * 牛四
     * </pre>
     *
     * <code>NIU_FOUR = 4;</code>
     */
    public static final int NIU_FOUR_VALUE = 4;
    /**
     * <pre>
     * 牛五
     * </pre>
     *
     * <code>NIU_FIVE = 5;</code>
     */
    public static final int NIU_FIVE_VALUE = 5;
    /**
     * <pre>
     * 牛六
     * </pre>
     *
     * <code>NIU_SIX = 6;</code>
     */
    public static final int NIU_SIX_VALUE = 6;
    /**
     * <pre>
     * 牛七
     * </pre>
     *
     * <code>NIU_SEVEN = 7;</code>
     */
    public static final int NIU_SEVEN_VALUE = 7;
    /**
     * <pre>
     * 牛八
     * </pre>
     *
     * <code>NIU_EIGHT = 8;</code>
     */
    public static final int NIU_EIGHT_VALUE = 8;
    /**
     * <pre>
     * 牛九
     * </pre>
     *
     * <code>NIU_NINE = 9;</code>
     */
    public static final int NIU_NINE_VALUE = 9;
    /**
     * <pre>
     * 牛牛
     * </pre>
     *
     * <code>NIU_NIU = 10;</code>
     */
    public static final int NIU_NIU_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NiuType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static NiuType forNumber(int value) {
      switch (value) {
        case 0: return NIU_ZERO;
        case 1: return NIU_ONE;
        case 2: return NIU_TWO;
        case 3: return NIU_THREE;
        case 4: return NIU_FOUR;
        case 5: return NIU_FIVE;
        case 6: return NIU_SIX;
        case 7: return NIU_SEVEN;
        case 8: return NIU_EIGHT;
        case 9: return NIU_NINE;
        case 10: return NIU_NIU;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NiuType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NiuType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NiuType>() {
            public NiuType findValueByNumber(int number) {
              return NiuType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(4);
    }

    private static final NiuType[] VALUES = values();

    public static NiuType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private NiuType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.NiuType)
  }

  /**
   * Protobuf enum {@code com.z.model.proto.WinState}
   */
  public enum WinState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *平局
     * </pre>
     *
     * <code>DRAW = 0;</code>
     */
    DRAW(0),
    /**
     * <pre>
     *赢
     * </pre>
     *
     * <code>WIN = 1;</code>
     */
    WIN(1),
    /**
     * <pre>
     *输
     * </pre>
     *
     * <code>FAIL = 2;</code>
     */
    FAIL(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *平局
     * </pre>
     *
     * <code>DRAW = 0;</code>
     */
    public static final int DRAW_VALUE = 0;
    /**
     * <pre>
     *赢
     * </pre>
     *
     * <code>WIN = 1;</code>
     */
    public static final int WIN_VALUE = 1;
    /**
     * <pre>
     *输
     * </pre>
     *
     * <code>FAIL = 2;</code>
     */
    public static final int FAIL_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WinState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static WinState forNumber(int value) {
      switch (value) {
        case 0: return DRAW;
        case 1: return WIN;
        case 2: return FAIL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WinState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WinState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WinState>() {
            public WinState findValueByNumber(int number) {
              return WinState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(5);
    }

    private static final WinState[] VALUES = values();

    public static WinState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WinState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.WinState)
  }

  /**
   * <pre>
   *玛丽符号
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.Mali}
   */
  public enum Mali
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>M_UNSPECIFIED = 0;</code>
     */
    M_UNSPECIFIED(0),
    /**
     * <pre>
     *香蕉
     * </pre>
     *
     * <code>BANANA = 1;</code>
     */
    BANANA(1),
    /**
     * <pre>
     * 西瓜
     * </pre>
     *
     * <code>WATERMELON = 2;</code>
     */
    WATERMELON(2),
    /**
     * <pre>
     * 柠檬
     * </pre>
     *
     * <code>LEMON = 3;</code>
     */
    LEMON(3),
    /**
     * <pre>
     * 葡萄
     * </pre>
     *
     * <code>GRAPE = 4;</code>
     */
    GRAPE(4),
    /**
     * <pre>
     * 菠萝
     * </pre>
     *
     * <code>ANANAS = 5;</code>
     */
    ANANAS(5),
    /**
     * <pre>
     *铃铛
     * </pre>
     *
     * <code>BELL = 6;</code>
     */
    BELL(6),
    /**
     * <pre>
     * 樱桃
     * </pre>
     *
     * <code>CHERRY = 7;</code>
     */
    CHERRY(7),
    /**
     * <pre>
     * BAR
     * </pre>
     *
     * <code>BAR = 8;</code>
     */
    BAR(8),
    /**
     * <pre>
     * 珍珠
     * </pre>
     *
     * <code>WILD = 50;</code>
     */
    WILD(50),
    /**
     * <pre>
     * 黄金珍珠
     * </pre>
     *
     * <code>GOLD_WILD = 100;</code>
     */
    GOLD_WILD(100),
    /**
     * <pre>
     * 橙子
     * </pre>
     *
     * <code>BONUS = 200;</code>
     */
    BONUS(200),
    /**
     * <pre>
     * 7
     * </pre>
     *
     * <code>SCARRER = 300;</code>
     */
    SCARRER(300),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>M_UNSPECIFIED = 0;</code>
     */
    public static final int M_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     *香蕉
     * </pre>
     *
     * <code>BANANA = 1;</code>
     */
    public static final int BANANA_VALUE = 1;
    /**
     * <pre>
     * 西瓜
     * </pre>
     *
     * <code>WATERMELON = 2;</code>
     */
    public static final int WATERMELON_VALUE = 2;
    /**
     * <pre>
     * 柠檬
     * </pre>
     *
     * <code>LEMON = 3;</code>
     */
    public static final int LEMON_VALUE = 3;
    /**
     * <pre>
     * 葡萄
     * </pre>
     *
     * <code>GRAPE = 4;</code>
     */
    public static final int GRAPE_VALUE = 4;
    /**
     * <pre>
     * 菠萝
     * </pre>
     *
     * <code>ANANAS = 5;</code>
     */
    public static final int ANANAS_VALUE = 5;
    /**
     * <pre>
     *铃铛
     * </pre>
     *
     * <code>BELL = 6;</code>
     */
    public static final int BELL_VALUE = 6;
    /**
     * <pre>
     * 樱桃
     * </pre>
     *
     * <code>CHERRY = 7;</code>
     */
    public static final int CHERRY_VALUE = 7;
    /**
     * <pre>
     * BAR
     * </pre>
     *
     * <code>BAR = 8;</code>
     */
    public static final int BAR_VALUE = 8;
    /**
     * <pre>
     * 珍珠
     * </pre>
     *
     * <code>WILD = 50;</code>
     */
    public static final int WILD_VALUE = 50;
    /**
     * <pre>
     * 黄金珍珠
     * </pre>
     *
     * <code>GOLD_WILD = 100;</code>
     */
    public static final int GOLD_WILD_VALUE = 100;
    /**
     * <pre>
     * 橙子
     * </pre>
     *
     * <code>BONUS = 200;</code>
     */
    public static final int BONUS_VALUE = 200;
    /**
     * <pre>
     * 7
     * </pre>
     *
     * <code>SCARRER = 300;</code>
     */
    public static final int SCARRER_VALUE = 300;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Mali valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Mali forNumber(int value) {
      switch (value) {
        case 0: return M_UNSPECIFIED;
        case 1: return BANANA;
        case 2: return WATERMELON;
        case 3: return LEMON;
        case 4: return GRAPE;
        case 5: return ANANAS;
        case 6: return BELL;
        case 7: return CHERRY;
        case 8: return BAR;
        case 50: return WILD;
        case 100: return GOLD_WILD;
        case 200: return BONUS;
        case 300: return SCARRER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Mali>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Mali> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Mali>() {
            public Mali findValueByNumber(int number) {
              return Mali.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(6);
    }

    private static final Mali[] VALUES = values();

    public static Mali valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Mali(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.Mali)
  }

  /**
   * <pre>
   *玛丽高级场符号
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.MaliHigher}
   */
  public enum MaliHigher
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>H_UNSPECIFIED = 0;</code>
     */
    H_UNSPECIFIED(0),
    /**
     * <pre>
     *香蕉
     * </pre>
     *
     * <code>H_BANANA = 1;</code>
     */
    H_BANANA(1),
    /**
     * <pre>
     * 西瓜
     * </pre>
     *
     * <code>H_WATERMELON = 2;</code>
     */
    H_WATERMELON(2),
    /**
     * <pre>
     * 柠檬
     * </pre>
     *
     * <code>H_LEMON = 3;</code>
     */
    H_LEMON(3),
    /**
     * <pre>
     * 葡萄
     * </pre>
     *
     * <code>H_GRAPE = 4;</code>
     */
    H_GRAPE(4),
    /**
     * <pre>
     * 菠萝
     * </pre>
     *
     * <code>H_ANANAS = 5;</code>
     */
    H_ANANAS(5),
    /**
     * <pre>
     * 樱桃
     * </pre>
     *
     * <code>H_CHERRY = 6;</code>
     */
    H_CHERRY(6),
    /**
     * <pre>
     * 橙子
     * </pre>
     *
     * <code>H_BONUS = 7;</code>
     */
    H_BONUS(7),
    /**
     * <pre>
     *炸药
     * </pre>
     *
     * <code>H_DINAMITE = 100;</code>
     */
    H_DINAMITE(100),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>H_UNSPECIFIED = 0;</code>
     */
    public static final int H_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     *香蕉
     * </pre>
     *
     * <code>H_BANANA = 1;</code>
     */
    public static final int H_BANANA_VALUE = 1;
    /**
     * <pre>
     * 西瓜
     * </pre>
     *
     * <code>H_WATERMELON = 2;</code>
     */
    public static final int H_WATERMELON_VALUE = 2;
    /**
     * <pre>
     * 柠檬
     * </pre>
     *
     * <code>H_LEMON = 3;</code>
     */
    public static final int H_LEMON_VALUE = 3;
    /**
     * <pre>
     * 葡萄
     * </pre>
     *
     * <code>H_GRAPE = 4;</code>
     */
    public static final int H_GRAPE_VALUE = 4;
    /**
     * <pre>
     * 菠萝
     * </pre>
     *
     * <code>H_ANANAS = 5;</code>
     */
    public static final int H_ANANAS_VALUE = 5;
    /**
     * <pre>
     * 樱桃
     * </pre>
     *
     * <code>H_CHERRY = 6;</code>
     */
    public static final int H_CHERRY_VALUE = 6;
    /**
     * <pre>
     * 橙子
     * </pre>
     *
     * <code>H_BONUS = 7;</code>
     */
    public static final int H_BONUS_VALUE = 7;
    /**
     * <pre>
     *炸药
     * </pre>
     *
     * <code>H_DINAMITE = 100;</code>
     */
    public static final int H_DINAMITE_VALUE = 100;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MaliHigher valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MaliHigher forNumber(int value) {
      switch (value) {
        case 0: return H_UNSPECIFIED;
        case 1: return H_BANANA;
        case 2: return H_WATERMELON;
        case 3: return H_LEMON;
        case 4: return H_GRAPE;
        case 5: return H_ANANAS;
        case 6: return H_CHERRY;
        case 7: return H_BONUS;
        case 100: return H_DINAMITE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MaliHigher>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MaliHigher> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MaliHigher>() {
            public MaliHigher findValueByNumber(int number) {
              return MaliHigher.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(7);
    }

    private static final MaliHigher[] VALUES = values();

    public static MaliHigher valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MaliHigher(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.MaliHigher)
  }

  /**
   * <pre>
   *----------麻将2-------
   *麻将符号
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.MJ}
   */
  public enum MJ
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>DEFAULT = 0;</code>
     */
    DEFAULT(0),
    /**
     * <pre>
     * 发
     * </pre>
     *
     * <code>FA = 9;</code>
     */
    FA(9),
    /**
     * <pre>
     * 中
     * </pre>
     *
     * <code>ZHO = 8;</code>
     */
    ZHO(8),
    /**
     * <pre>
     * 框
     * </pre>
     *
     * <code>KUANG = 7;</code>
     */
    KUANG(7),
    /**
     * <pre>
     * 8万
     * </pre>
     *
     * <code>W_8 = 6;</code>
     */
    W_8(6),
    /**
     * <pre>
     * 五饼
     * </pre>
     *
     * <code>B_5 = 5;</code>
     */
    B_5(5),
    /**
     * <pre>
     * 五条
     * </pre>
     *
     * <code>T_5 = 4;</code>
     */
    T_5(4),
    /**
     * <pre>
     *三饼
     * </pre>
     *
     * <code>B_3 = 3;</code>
     */
    B_3(3),
    /**
     * <pre>
     * 2饼
     * </pre>
     *
     * <code>B_2 = 2;</code>
     */
    B_2(2),
    /**
     * <pre>
     * 2条
     * </pre>
     *
     * <code>T_2 = 1;</code>
     */
    T_2(1),
    /**
     * <pre>
     *胡
     * </pre>
     *
     * <code>HU = 50;</code>
     */
    HU(50),
    /**
     * <pre>
     * 百搭
     * </pre>
     *
     * <code>BAIDA = 60;</code>
     */
    BAIDA(60),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>DEFAULT = 0;</code>
     */
    public static final int DEFAULT_VALUE = 0;
    /**
     * <pre>
     * 发
     * </pre>
     *
     * <code>FA = 9;</code>
     */
    public static final int FA_VALUE = 9;
    /**
     * <pre>
     * 中
     * </pre>
     *
     * <code>ZHO = 8;</code>
     */
    public static final int ZHO_VALUE = 8;
    /**
     * <pre>
     * 框
     * </pre>
     *
     * <code>KUANG = 7;</code>
     */
    public static final int KUANG_VALUE = 7;
    /**
     * <pre>
     * 8万
     * </pre>
     *
     * <code>W_8 = 6;</code>
     */
    public static final int W_8_VALUE = 6;
    /**
     * <pre>
     * 五饼
     * </pre>
     *
     * <code>B_5 = 5;</code>
     */
    public static final int B_5_VALUE = 5;
    /**
     * <pre>
     * 五条
     * </pre>
     *
     * <code>T_5 = 4;</code>
     */
    public static final int T_5_VALUE = 4;
    /**
     * <pre>
     *三饼
     * </pre>
     *
     * <code>B_3 = 3;</code>
     */
    public static final int B_3_VALUE = 3;
    /**
     * <pre>
     * 2饼
     * </pre>
     *
     * <code>B_2 = 2;</code>
     */
    public static final int B_2_VALUE = 2;
    /**
     * <pre>
     * 2条
     * </pre>
     *
     * <code>T_2 = 1;</code>
     */
    public static final int T_2_VALUE = 1;
    /**
     * <pre>
     *胡
     * </pre>
     *
     * <code>HU = 50;</code>
     */
    public static final int HU_VALUE = 50;
    /**
     * <pre>
     * 百搭
     * </pre>
     *
     * <code>BAIDA = 60;</code>
     */
    public static final int BAIDA_VALUE = 60;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MJ valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MJ forNumber(int value) {
      switch (value) {
        case 0: return DEFAULT;
        case 9: return FA;
        case 8: return ZHO;
        case 7: return KUANG;
        case 6: return W_8;
        case 5: return B_5;
        case 4: return T_5;
        case 3: return B_3;
        case 2: return B_2;
        case 1: return T_2;
        case 50: return HU;
        case 60: return BAIDA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MJ>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MJ> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MJ>() {
            public MJ findValueByNumber(int number) {
              return MJ.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(8);
    }

    private static final MJ[] VALUES = values();

    public static MJ valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MJ(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.MJ)
  }

  /**
   * <pre>
   * FishType 枚举
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.FishType}
   */
  public enum FishType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认
     * </pre>
     *
     * <code>FT_DEFAULT = 0;</code>
     */
    FT_DEFAULT(0),
    /**
     * <pre>
     * 孔雀鱼
     * </pre>
     *
     * <code>KONG_QUE_YU = 1;</code>
     */
    KONG_QUE_YU(1),
    /**
     * <pre>
     * 小丑鱼
     * </pre>
     *
     * <code>XIAO_CHOU_YU = 2;</code>
     */
    XIAO_CHOU_YU(2),
    /**
     * <pre>
     * 小蓝鱼
     * </pre>
     *
     * <code>XIAO_LAN_YU = 3;</code>
     */
    XIAO_LAN_YU(3),
    /**
     * <pre>
     * 小青鱼
     * </pre>
     *
     * <code>XIAO_QING_YU = 4;</code>
     */
    XIAO_QING_YU(4),
    /**
     * <pre>
     * 小黄鱼
     * </pre>
     *
     * <code>XIAO_HUANG_YU = 5;</code>
     */
    XIAO_HUANG_YU(5),
    /**
     * <pre>
     * 彩云鱼
     * </pre>
     *
     * <code>CAI_YUN_YU = 6;</code>
     */
    CAI_YUN_YU(6),
    /**
     * <pre>
     * 金枪鱼
     * </pre>
     *
     * <code>JIN_QIANG_YU = 7;</code>
     */
    JIN_QIANG_YU(7),
    /**
     * <pre>
     * 灯笼鱼
     * </pre>
     *
     * <code>DENG_LONG_YU = 8;</code>
     */
    DENG_LONG_YU(8),
    /**
     * <pre>
     * 大眼睛鱼
     * </pre>
     *
     * <code>DA_YAN_JING_YU = 9;</code>
     */
    DA_YAN_JING_YU(9),
    /**
     * <pre>
     * 刺猬鱼
     * </pre>
     *
     * <code>CI_WEI_YU = 10;</code>
     */
    CI_WEI_YU(10),
    /**
     * <pre>
     * 石斑鱼
     * </pre>
     *
     * <code>SHI_BAN_YU = 11;</code>
     */
    SHI_BAN_YU(11),
    /**
     * <pre>
     * 神仙鱼
     * </pre>
     *
     * <code>SHEN_XIAN_YU = 12;</code>
     */
    SHEN_XIAN_YU(12),
    /**
     * <pre>
     * 蝴蝶鱼
     * </pre>
     *
     * <code>HU_DIE_YU = 13;</code>
     */
    HU_DIE_YU(13),
    /**
     * <pre>
     * 蟋蟀鱼
     * </pre>
     *
     * <code>XI_SHUAI_YU = 14;</code>
     */
    XI_SHUAI_YU(14),
    /**
     * <pre>
     * 魔鬼鱼
     * </pre>
     *
     * <code>MO_GUI_YU = 15;</code>
     */
    MO_GUI_YU(15),
    /**
     * <pre>
     * 乌龟
     * </pre>
     *
     * <code>WU_GUI = 16;</code>
     */
    WU_GUI(16),
    /**
     * <pre>
     * 银色鲨鱼
     * </pre>
     *
     * <code>YIN_SHA_YU = 17;</code>
     */
    YIN_SHA_YU(17),
    /**
     * <pre>
     * 金色鲨鱼
     * </pre>
     *
     * <code>JIN_SHA_YU = 18;</code>
     */
    JIN_SHA_YU(18),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认
     * </pre>
     *
     * <code>FT_DEFAULT = 0;</code>
     */
    public static final int FT_DEFAULT_VALUE = 0;
    /**
     * <pre>
     * 孔雀鱼
     * </pre>
     *
     * <code>KONG_QUE_YU = 1;</code>
     */
    public static final int KONG_QUE_YU_VALUE = 1;
    /**
     * <pre>
     * 小丑鱼
     * </pre>
     *
     * <code>XIAO_CHOU_YU = 2;</code>
     */
    public static final int XIAO_CHOU_YU_VALUE = 2;
    /**
     * <pre>
     * 小蓝鱼
     * </pre>
     *
     * <code>XIAO_LAN_YU = 3;</code>
     */
    public static final int XIAO_LAN_YU_VALUE = 3;
    /**
     * <pre>
     * 小青鱼
     * </pre>
     *
     * <code>XIAO_QING_YU = 4;</code>
     */
    public static final int XIAO_QING_YU_VALUE = 4;
    /**
     * <pre>
     * 小黄鱼
     * </pre>
     *
     * <code>XIAO_HUANG_YU = 5;</code>
     */
    public static final int XIAO_HUANG_YU_VALUE = 5;
    /**
     * <pre>
     * 彩云鱼
     * </pre>
     *
     * <code>CAI_YUN_YU = 6;</code>
     */
    public static final int CAI_YUN_YU_VALUE = 6;
    /**
     * <pre>
     * 金枪鱼
     * </pre>
     *
     * <code>JIN_QIANG_YU = 7;</code>
     */
    public static final int JIN_QIANG_YU_VALUE = 7;
    /**
     * <pre>
     * 灯笼鱼
     * </pre>
     *
     * <code>DENG_LONG_YU = 8;</code>
     */
    public static final int DENG_LONG_YU_VALUE = 8;
    /**
     * <pre>
     * 大眼睛鱼
     * </pre>
     *
     * <code>DA_YAN_JING_YU = 9;</code>
     */
    public static final int DA_YAN_JING_YU_VALUE = 9;
    /**
     * <pre>
     * 刺猬鱼
     * </pre>
     *
     * <code>CI_WEI_YU = 10;</code>
     */
    public static final int CI_WEI_YU_VALUE = 10;
    /**
     * <pre>
     * 石斑鱼
     * </pre>
     *
     * <code>SHI_BAN_YU = 11;</code>
     */
    public static final int SHI_BAN_YU_VALUE = 11;
    /**
     * <pre>
     * 神仙鱼
     * </pre>
     *
     * <code>SHEN_XIAN_YU = 12;</code>
     */
    public static final int SHEN_XIAN_YU_VALUE = 12;
    /**
     * <pre>
     * 蝴蝶鱼
     * </pre>
     *
     * <code>HU_DIE_YU = 13;</code>
     */
    public static final int HU_DIE_YU_VALUE = 13;
    /**
     * <pre>
     * 蟋蟀鱼
     * </pre>
     *
     * <code>XI_SHUAI_YU = 14;</code>
     */
    public static final int XI_SHUAI_YU_VALUE = 14;
    /**
     * <pre>
     * 魔鬼鱼
     * </pre>
     *
     * <code>MO_GUI_YU = 15;</code>
     */
    public static final int MO_GUI_YU_VALUE = 15;
    /**
     * <pre>
     * 乌龟
     * </pre>
     *
     * <code>WU_GUI = 16;</code>
     */
    public static final int WU_GUI_VALUE = 16;
    /**
     * <pre>
     * 银色鲨鱼
     * </pre>
     *
     * <code>YIN_SHA_YU = 17;</code>
     */
    public static final int YIN_SHA_YU_VALUE = 17;
    /**
     * <pre>
     * 金色鲨鱼
     * </pre>
     *
     * <code>JIN_SHA_YU = 18;</code>
     */
    public static final int JIN_SHA_YU_VALUE = 18;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FishType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FishType forNumber(int value) {
      switch (value) {
        case 0: return FT_DEFAULT;
        case 1: return KONG_QUE_YU;
        case 2: return XIAO_CHOU_YU;
        case 3: return XIAO_LAN_YU;
        case 4: return XIAO_QING_YU;
        case 5: return XIAO_HUANG_YU;
        case 6: return CAI_YUN_YU;
        case 7: return JIN_QIANG_YU;
        case 8: return DENG_LONG_YU;
        case 9: return DA_YAN_JING_YU;
        case 10: return CI_WEI_YU;
        case 11: return SHI_BAN_YU;
        case 12: return SHEN_XIAN_YU;
        case 13: return HU_DIE_YU;
        case 14: return XI_SHUAI_YU;
        case 15: return MO_GUI_YU;
        case 16: return WU_GUI;
        case 17: return YIN_SHA_YU;
        case 18: return JIN_SHA_YU;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FishType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FishType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FishType>() {
            public FishType findValueByNumber(int number) {
              return FishType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(9);
    }

    private static final FishType[] VALUES = values();

    public static FishType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FishType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.FishType)
  }

  /**
   * <pre>
   * 火力类型
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.FishFire}
   */
  public enum FishFire
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认
     * </pre>
     *
     * <code>FFT_DEFAULT = 0;</code>
     */
    FFT_DEFAULT(0),
    /**
     * <pre>
     * 普通炮弹- 1
     * </pre>
     *
     * <code>FFT_1 = 1;</code>
     */
    FFT_1(1),
    /**
     * <pre>
     * 普通炮弹- 2
     * </pre>
     *
     * <code>FFT_2 = 2;</code>
     */
    FFT_2(2),
    /**
     * <pre>
     * 普通炮弹- 3
     * </pre>
     *
     * <code>FFT_3 = 3;</code>
     */
    FFT_3(3),
    /**
     * <pre>
     *普通炮弹- 4
     * </pre>
     *
     * <code>FFT_4 = 4;</code>
     */
    FFT_4(4),
    /**
     * <pre>
     *普通炮弹- 5
     * </pre>
     *
     * <code>FFT_5 = 5;</code>
     */
    FFT_5(5),
    /**
     * <code>FFT_6 = 6;</code>
     */
    FFT_6(6),
    /**
     * <code>FFT_7 = 7;</code>
     */
    FFT_7(7),
    /**
     * <code>FFT_8 = 8;</code>
     */
    FFT_8(8),
    /**
     * <code>FFT_9 = 9;</code>
     */
    FFT_9(9),
    /**
     * <code>FFT_10 = 10;</code>
     */
    FFT_10(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认
     * </pre>
     *
     * <code>FFT_DEFAULT = 0;</code>
     */
    public static final int FFT_DEFAULT_VALUE = 0;
    /**
     * <pre>
     * 普通炮弹- 1
     * </pre>
     *
     * <code>FFT_1 = 1;</code>
     */
    public static final int FFT_1_VALUE = 1;
    /**
     * <pre>
     * 普通炮弹- 2
     * </pre>
     *
     * <code>FFT_2 = 2;</code>
     */
    public static final int FFT_2_VALUE = 2;
    /**
     * <pre>
     * 普通炮弹- 3
     * </pre>
     *
     * <code>FFT_3 = 3;</code>
     */
    public static final int FFT_3_VALUE = 3;
    /**
     * <pre>
     *普通炮弹- 4
     * </pre>
     *
     * <code>FFT_4 = 4;</code>
     */
    public static final int FFT_4_VALUE = 4;
    /**
     * <pre>
     *普通炮弹- 5
     * </pre>
     *
     * <code>FFT_5 = 5;</code>
     */
    public static final int FFT_5_VALUE = 5;
    /**
     * <code>FFT_6 = 6;</code>
     */
    public static final int FFT_6_VALUE = 6;
    /**
     * <code>FFT_7 = 7;</code>
     */
    public static final int FFT_7_VALUE = 7;
    /**
     * <code>FFT_8 = 8;</code>
     */
    public static final int FFT_8_VALUE = 8;
    /**
     * <code>FFT_9 = 9;</code>
     */
    public static final int FFT_9_VALUE = 9;
    /**
     * <code>FFT_10 = 10;</code>
     */
    public static final int FFT_10_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FishFire valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FishFire forNumber(int value) {
      switch (value) {
        case 0: return FFT_DEFAULT;
        case 1: return FFT_1;
        case 2: return FFT_2;
        case 3: return FFT_3;
        case 4: return FFT_4;
        case 5: return FFT_5;
        case 6: return FFT_6;
        case 7: return FFT_7;
        case 8: return FFT_8;
        case 9: return FFT_9;
        case 10: return FFT_10;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FishFire>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FishFire> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FishFire>() {
            public FishFire findValueByNumber(int number) {
              return FishFire.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(10);
    }

    private static final FishFire[] VALUES = values();

    public static FishFire valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FishFire(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.FishFire)
  }

  /**
   * <pre>
   *九线拉王
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.LINE9}
   */
  public enum LINE9
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>L9_UNSPECIFIED = 0;</code>
     */
    L9_UNSPECIFIED(0),
    /**
     * <pre>
     * 菠萝
     * </pre>
     *
     * <code>L9_ANANAS = 1;</code>
     */
    L9_ANANAS(1),
    /**
     * <pre>
     *香蕉
     * </pre>
     *
     * <code>L9_BANANA = 2;</code>
     */
    L9_BANANA(2),
    /**
     * <pre>
     *铃铛
     * </pre>
     *
     * <code>L9_BELL = 3;</code>
     */
    L9_BELL(3),
    /**
     * <pre>
     * 葡萄
     * </pre>
     *
     * <code>L9_GRAPE = 4;</code>
     */
    L9_GRAPE(4),
    /**
     * <pre>
     * 樱桃
     * </pre>
     *
     * <code>L9_CHERRY = 5;</code>
     */
    L9_CHERRY(5),
    /**
     * <pre>
     * 苹果
     * </pre>
     *
     * <code>L9_APPLE = 6;</code>
     */
    L9_APPLE(6),
    /**
     * <pre>
     * 西瓜
     * </pre>
     *
     * <code>L9_WATERMELON = 7;</code>
     */
    L9_WATERMELON(7),
    /**
     * <pre>
     * 芒果
     * </pre>
     *
     * <code>L9_MANGO = 8;</code>
     */
    L9_MANGO(8),
    /**
     * <pre>
     * 橙子
     * </pre>
     *
     * <code>L9_ORAGE = 9;</code>
     */
    L9_ORAGE(9),
    /**
     * <pre>
     * 荔枝
     * </pre>
     *
     * <code>L9_LICHEE = 10;</code>
     */
    L9_LICHEE(10),
    /**
     * <pre>
     * BAR
     * </pre>
     *
     * <code>L9_BAR = 11;</code>
     */
    L9_BAR(11),
    /**
     * <pre>
     * 7
     * </pre>
     *
     * <code>L9_7 = 77;</code>
     */
    L9_7(77),
    /**
     * <pre>
     * 钻石
     * </pre>
     *
     * <code>L9_DIAMOND = 100;</code>
     */
    L9_DIAMOND(100),
    /**
     * <pre>
     * 宝箱
     * </pre>
     *
     * <code>L9_BOX = 200;</code>
     */
    L9_BOX(200),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>L9_UNSPECIFIED = 0;</code>
     */
    public static final int L9_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * 菠萝
     * </pre>
     *
     * <code>L9_ANANAS = 1;</code>
     */
    public static final int L9_ANANAS_VALUE = 1;
    /**
     * <pre>
     *香蕉
     * </pre>
     *
     * <code>L9_BANANA = 2;</code>
     */
    public static final int L9_BANANA_VALUE = 2;
    /**
     * <pre>
     *铃铛
     * </pre>
     *
     * <code>L9_BELL = 3;</code>
     */
    public static final int L9_BELL_VALUE = 3;
    /**
     * <pre>
     * 葡萄
     * </pre>
     *
     * <code>L9_GRAPE = 4;</code>
     */
    public static final int L9_GRAPE_VALUE = 4;
    /**
     * <pre>
     * 樱桃
     * </pre>
     *
     * <code>L9_CHERRY = 5;</code>
     */
    public static final int L9_CHERRY_VALUE = 5;
    /**
     * <pre>
     * 苹果
     * </pre>
     *
     * <code>L9_APPLE = 6;</code>
     */
    public static final int L9_APPLE_VALUE = 6;
    /**
     * <pre>
     * 西瓜
     * </pre>
     *
     * <code>L9_WATERMELON = 7;</code>
     */
    public static final int L9_WATERMELON_VALUE = 7;
    /**
     * <pre>
     * 芒果
     * </pre>
     *
     * <code>L9_MANGO = 8;</code>
     */
    public static final int L9_MANGO_VALUE = 8;
    /**
     * <pre>
     * 橙子
     * </pre>
     *
     * <code>L9_ORAGE = 9;</code>
     */
    public static final int L9_ORAGE_VALUE = 9;
    /**
     * <pre>
     * 荔枝
     * </pre>
     *
     * <code>L9_LICHEE = 10;</code>
     */
    public static final int L9_LICHEE_VALUE = 10;
    /**
     * <pre>
     * BAR
     * </pre>
     *
     * <code>L9_BAR = 11;</code>
     */
    public static final int L9_BAR_VALUE = 11;
    /**
     * <pre>
     * 7
     * </pre>
     *
     * <code>L9_7 = 77;</code>
     */
    public static final int L9_7_VALUE = 77;
    /**
     * <pre>
     * 钻石
     * </pre>
     *
     * <code>L9_DIAMOND = 100;</code>
     */
    public static final int L9_DIAMOND_VALUE = 100;
    /**
     * <pre>
     * 宝箱
     * </pre>
     *
     * <code>L9_BOX = 200;</code>
     */
    public static final int L9_BOX_VALUE = 200;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LINE9 valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LINE9 forNumber(int value) {
      switch (value) {
        case 0: return L9_UNSPECIFIED;
        case 1: return L9_ANANAS;
        case 2: return L9_BANANA;
        case 3: return L9_BELL;
        case 4: return L9_GRAPE;
        case 5: return L9_CHERRY;
        case 6: return L9_APPLE;
        case 7: return L9_WATERMELON;
        case 8: return L9_MANGO;
        case 9: return L9_ORAGE;
        case 10: return L9_LICHEE;
        case 11: return L9_BAR;
        case 77: return L9_7;
        case 100: return L9_DIAMOND;
        case 200: return L9_BOX;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LINE9>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LINE9> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LINE9>() {
            public LINE9 findValueByNumber(int number) {
              return LINE9.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(11);
    }

    private static final LINE9[] VALUES = values();

    public static LINE9 valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LINE9(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.LINE9)
  }

  /**
   * <pre>
   *少林足球
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.FOOTBALL}
   */
  public enum FOOTBALL
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>FT_UNSPECIFIED = 0;</code>
     */
    FT_UNSPECIFIED(0),
    /**
     * <pre>
     * 10
     * </pre>
     *
     * <code>FT_10 = 1;</code>
     */
    FT_10(1),
    /**
     * <pre>
     *11
     * </pre>
     *
     * <code>FT_11 = 2;</code>
     */
    FT_11(2),
    /**
     * <pre>
     *12
     * </pre>
     *
     * <code>FT_12 = 3;</code>
     */
    FT_12(3),
    /**
     * <pre>
     *13
     * </pre>
     *
     * <code>FT_13 = 4;</code>
     */
    FT_13(4),
    /**
     * <pre>
     * A
     * </pre>
     *
     * <code>FT_A = 5;</code>
     */
    FT_A(5),
    /**
     * <pre>
     * 和尚1-黄色
     * </pre>
     *
     * <code>FT_MONK1 = 6;</code>
     */
    FT_MONK1(6),
    /**
     * <pre>
     * 和尚2-红色
     * </pre>
     *
     * <code>FT_MONK2 = 7;</code>
     */
    FT_MONK2(7),
    /**
     * <pre>
     *和尚3 -紫色
     * </pre>
     *
     * <code>FT_MONK3 = 8;</code>
     */
    FT_MONK3(8),
    /**
     * <pre>
     * 和尚4-蓝色
     * </pre>
     *
     * <code>FT_MONK4 = 9;</code>
     */
    FT_MONK4(9),
    /**
     * <pre>
     * 和尚5-绿色
     * </pre>
     *
     * <code>FT_MONK5 = 10;</code>
     */
    FT_MONK5(10),
    /**
     * <pre>
     * 百搭
     * </pre>
     *
     * <code>FT_BAIDA = 100;</code>
     */
    FT_BAIDA(100),
    /**
     * <pre>
     *夺宝符号
     * </pre>
     *
     * <code>FT_SCATTER = 200;</code>
     */
    FT_SCATTER(200),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>FT_UNSPECIFIED = 0;</code>
     */
    public static final int FT_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * 10
     * </pre>
     *
     * <code>FT_10 = 1;</code>
     */
    public static final int FT_10_VALUE = 1;
    /**
     * <pre>
     *11
     * </pre>
     *
     * <code>FT_11 = 2;</code>
     */
    public static final int FT_11_VALUE = 2;
    /**
     * <pre>
     *12
     * </pre>
     *
     * <code>FT_12 = 3;</code>
     */
    public static final int FT_12_VALUE = 3;
    /**
     * <pre>
     *13
     * </pre>
     *
     * <code>FT_13 = 4;</code>
     */
    public static final int FT_13_VALUE = 4;
    /**
     * <pre>
     * A
     * </pre>
     *
     * <code>FT_A = 5;</code>
     */
    public static final int FT_A_VALUE = 5;
    /**
     * <pre>
     * 和尚1-黄色
     * </pre>
     *
     * <code>FT_MONK1 = 6;</code>
     */
    public static final int FT_MONK1_VALUE = 6;
    /**
     * <pre>
     * 和尚2-红色
     * </pre>
     *
     * <code>FT_MONK2 = 7;</code>
     */
    public static final int FT_MONK2_VALUE = 7;
    /**
     * <pre>
     *和尚3 -紫色
     * </pre>
     *
     * <code>FT_MONK3 = 8;</code>
     */
    public static final int FT_MONK3_VALUE = 8;
    /**
     * <pre>
     * 和尚4-蓝色
     * </pre>
     *
     * <code>FT_MONK4 = 9;</code>
     */
    public static final int FT_MONK4_VALUE = 9;
    /**
     * <pre>
     * 和尚5-绿色
     * </pre>
     *
     * <code>FT_MONK5 = 10;</code>
     */
    public static final int FT_MONK5_VALUE = 10;
    /**
     * <pre>
     * 百搭
     * </pre>
     *
     * <code>FT_BAIDA = 100;</code>
     */
    public static final int FT_BAIDA_VALUE = 100;
    /**
     * <pre>
     *夺宝符号
     * </pre>
     *
     * <code>FT_SCATTER = 200;</code>
     */
    public static final int FT_SCATTER_VALUE = 200;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FOOTBALL valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FOOTBALL forNumber(int value) {
      switch (value) {
        case 0: return FT_UNSPECIFIED;
        case 1: return FT_10;
        case 2: return FT_11;
        case 3: return FT_12;
        case 4: return FT_13;
        case 5: return FT_A;
        case 6: return FT_MONK1;
        case 7: return FT_MONK2;
        case 8: return FT_MONK3;
        case 9: return FT_MONK4;
        case 10: return FT_MONK5;
        case 100: return FT_BAIDA;
        case 200: return FT_SCATTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FOOTBALL>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FOOTBALL> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FOOTBALL>() {
            public FOOTBALL findValueByNumber(int number) {
              return FOOTBALL.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(12);
    }

    private static final FOOTBALL[] VALUES = values();

    public static FOOTBALL valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FOOTBALL(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.FOOTBALL)
  }

  /**
   * <pre>
   *阿拉丁
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.Aladdin}
   */
  public enum Aladdin
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>A_UNSPECIFIED = 0;</code>
     */
    A_UNSPECIFIED(0),
    /**
     * <pre>
     * 10
     * </pre>
     *
     * <code>A_10 = 1;</code>
     */
    A_10(1),
    /**
     * <pre>
     *11
     * </pre>
     *
     * <code>A_11 = 2;</code>
     */
    A_11(2),
    /**
     * <pre>
     *12
     * </pre>
     *
     * <code>A_12 = 3;</code>
     */
    A_12(3),
    /**
     * <pre>
     *13
     * </pre>
     *
     * <code>A_13 = 4;</code>
     */
    A_13(4),
    /**
     * <pre>
     * A
     * </pre>
     *
     * <code>A_A = 5;</code>
     */
    A_A(5),
    /**
     * <pre>
     *奖杯
     * </pre>
     *
     * <code>A_CUP = 6;</code>
     */
    A_CUP(6),
    /**
     * <pre>
     * 刀
     * </pre>
     *
     * <code>A_Knife = 7;</code>
     */
    A_Knife(7),
    /**
     * <pre>
     *戒指
     * </pre>
     *
     * <code>A_Ring = 8;</code>
     */
    A_Ring(8),
    /**
     * <pre>
     *项链
     * </pre>
     *
     * <code>A_TORQUE = 9;</code>
     */
    A_TORQUE(9),
    /**
     * <pre>
     * 帽子
     * </pre>
     *
     * <code>A_HAT = 10;</code>
     */
    A_HAT(10),
    /**
     * <pre>
     * 夺宝
     * </pre>
     *
     * <code>A_FREE = 50;</code>
     */
    A_FREE(50),
    /**
     * <pre>
     * 百搭
     * </pre>
     *
     * <code>A_BAIDA = 60;</code>
     */
    A_BAIDA(60),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>A_UNSPECIFIED = 0;</code>
     */
    public static final int A_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * 10
     * </pre>
     *
     * <code>A_10 = 1;</code>
     */
    public static final int A_10_VALUE = 1;
    /**
     * <pre>
     *11
     * </pre>
     *
     * <code>A_11 = 2;</code>
     */
    public static final int A_11_VALUE = 2;
    /**
     * <pre>
     *12
     * </pre>
     *
     * <code>A_12 = 3;</code>
     */
    public static final int A_12_VALUE = 3;
    /**
     * <pre>
     *13
     * </pre>
     *
     * <code>A_13 = 4;</code>
     */
    public static final int A_13_VALUE = 4;
    /**
     * <pre>
     * A
     * </pre>
     *
     * <code>A_A = 5;</code>
     */
    public static final int A_A_VALUE = 5;
    /**
     * <pre>
     *奖杯
     * </pre>
     *
     * <code>A_CUP = 6;</code>
     */
    public static final int A_CUP_VALUE = 6;
    /**
     * <pre>
     * 刀
     * </pre>
     *
     * <code>A_Knife = 7;</code>
     */
    public static final int A_Knife_VALUE = 7;
    /**
     * <pre>
     *戒指
     * </pre>
     *
     * <code>A_Ring = 8;</code>
     */
    public static final int A_Ring_VALUE = 8;
    /**
     * <pre>
     *项链
     * </pre>
     *
     * <code>A_TORQUE = 9;</code>
     */
    public static final int A_TORQUE_VALUE = 9;
    /**
     * <pre>
     * 帽子
     * </pre>
     *
     * <code>A_HAT = 10;</code>
     */
    public static final int A_HAT_VALUE = 10;
    /**
     * <pre>
     * 夺宝
     * </pre>
     *
     * <code>A_FREE = 50;</code>
     */
    public static final int A_FREE_VALUE = 50;
    /**
     * <pre>
     * 百搭
     * </pre>
     *
     * <code>A_BAIDA = 60;</code>
     */
    public static final int A_BAIDA_VALUE = 60;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Aladdin valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Aladdin forNumber(int value) {
      switch (value) {
        case 0: return A_UNSPECIFIED;
        case 1: return A_10;
        case 2: return A_11;
        case 3: return A_12;
        case 4: return A_13;
        case 5: return A_A;
        case 6: return A_CUP;
        case 7: return A_Knife;
        case 8: return A_Ring;
        case 9: return A_TORQUE;
        case 10: return A_HAT;
        case 50: return A_FREE;
        case 60: return A_BAIDA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Aladdin>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Aladdin> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Aladdin>() {
            public Aladdin findValueByNumber(int number) {
              return Aladdin.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(13);
    }

    private static final Aladdin[] VALUES = values();

    public static Aladdin valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Aladdin(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.Aladdin)
  }

  /**
   * <pre>
   *冰球突破
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.Puck}
   */
  public enum Puck
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>P_UNSPECIFIED = 0;</code>
     */
    P_UNSPECIFIED(0),
    /**
     * <pre>
     * 汽车
     * </pre>
     *
     * <code>P_CAR = 1;</code>
     */
    P_CAR(1),
    /**
     * <pre>
     *鞋
     * </pre>
     *
     * <code>P_SHOE = 2;</code>
     */
    P_SHOE(2),
    /**
     * <pre>
     *棍子
     * </pre>
     *
     * <code>P_STICK = 3;</code>
     */
    P_STICK(3),
    /**
     * <pre>
     *球
     * </pre>
     *
     * <code>P_PUCK = 4;</code>
     */
    P_PUCK(4),
    /**
     * <pre>
     * 两个人
     * </pre>
     *
     * <code>P_TWO = 5;</code>
     */
    P_TWO(5),
    /**
     * <pre>
     * 绿色胖子
     * </pre>
     *
     * <code>P_G_FAT = 6;</code>
     */
    P_G_FAT(6),
    /**
     * <pre>
     *蓝色胖子
     * </pre>
     *
     * <code>P_B_FAT = 7;</code>
     */
    P_B_FAT(7),
    /**
     * <pre>
     * 绿色瘦子
     * </pre>
     *
     * <code>P_G_THIN = 8;</code>
     */
    P_G_THIN(8),
    /**
     * <pre>
     *红色瘦子
     * </pre>
     *
     * <code>P_R_THIN = 9;</code>
     */
    P_R_THIN(9),
    /**
     * <pre>
     * SCATTER
     * </pre>
     *
     * <code>P_FREE = 50;</code>
     */
    P_FREE(50),
    /**
     * <pre>
     * 百搭
     * </pre>
     *
     * <code>P_BAIDA = 60;</code>
     */
    P_BAIDA(60),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>P_UNSPECIFIED = 0;</code>
     */
    public static final int P_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * 汽车
     * </pre>
     *
     * <code>P_CAR = 1;</code>
     */
    public static final int P_CAR_VALUE = 1;
    /**
     * <pre>
     *鞋
     * </pre>
     *
     * <code>P_SHOE = 2;</code>
     */
    public static final int P_SHOE_VALUE = 2;
    /**
     * <pre>
     *棍子
     * </pre>
     *
     * <code>P_STICK = 3;</code>
     */
    public static final int P_STICK_VALUE = 3;
    /**
     * <pre>
     *球
     * </pre>
     *
     * <code>P_PUCK = 4;</code>
     */
    public static final int P_PUCK_VALUE = 4;
    /**
     * <pre>
     * 两个人
     * </pre>
     *
     * <code>P_TWO = 5;</code>
     */
    public static final int P_TWO_VALUE = 5;
    /**
     * <pre>
     * 绿色胖子
     * </pre>
     *
     * <code>P_G_FAT = 6;</code>
     */
    public static final int P_G_FAT_VALUE = 6;
    /**
     * <pre>
     *蓝色胖子
     * </pre>
     *
     * <code>P_B_FAT = 7;</code>
     */
    public static final int P_B_FAT_VALUE = 7;
    /**
     * <pre>
     * 绿色瘦子
     * </pre>
     *
     * <code>P_G_THIN = 8;</code>
     */
    public static final int P_G_THIN_VALUE = 8;
    /**
     * <pre>
     *红色瘦子
     * </pre>
     *
     * <code>P_R_THIN = 9;</code>
     */
    public static final int P_R_THIN_VALUE = 9;
    /**
     * <pre>
     * SCATTER
     * </pre>
     *
     * <code>P_FREE = 50;</code>
     */
    public static final int P_FREE_VALUE = 50;
    /**
     * <pre>
     * 百搭
     * </pre>
     *
     * <code>P_BAIDA = 60;</code>
     */
    public static final int P_BAIDA_VALUE = 60;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Puck valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Puck forNumber(int value) {
      switch (value) {
        case 0: return P_UNSPECIFIED;
        case 1: return P_CAR;
        case 2: return P_SHOE;
        case 3: return P_STICK;
        case 4: return P_PUCK;
        case 5: return P_TWO;
        case 6: return P_G_FAT;
        case 7: return P_B_FAT;
        case 8: return P_G_THIN;
        case 9: return P_R_THIN;
        case 50: return P_FREE;
        case 60: return P_BAIDA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Puck>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Puck> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Puck>() {
            public Puck findValueByNumber(int number) {
              return Puck.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(14);
    }

    private static final Puck[] VALUES = values();

    public static Puck valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Puck(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.Puck)
  }

  /**
   * <pre>
   *水浒传-----------------start
   *水浒传
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.WaterMargin}
   */
  public enum WaterMargin
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>WM_UNSPECIFIED = 0;</code>
     */
    WM_UNSPECIFIED(0),
    /**
     * <pre>
     * 斧子
     * </pre>
     *
     * <code>WM_AXE = 1;</code>
     */
    WM_AXE(1),
    /**
     * <pre>
     *长枪
     * </pre>
     *
     * <code>WM_SPEAR = 2;</code>
     */
    WM_SPEAR(2),
    /**
     * <pre>
     *刀
     * </pre>
     *
     * <code>WM_CUT = 3;</code>
     */
    WM_CUT(3),
    /**
     * <pre>
     *鲁智深
     * </pre>
     *
     * <code>WM_LU = 4;</code>
     */
    WM_LU(4),
    /**
     * <pre>
     * 林冲
     * </pre>
     *
     * <code>WM_LIN = 5;</code>
     */
    WM_LIN(5),
    /**
     * <pre>
     * 宋江
     * </pre>
     *
     * <code>WM_SONG = 6;</code>
     */
    WM_SONG(6),
    /**
     * <pre>
     * 替天行道
     * </pre>
     *
     * <code>WM_DAO = 7;</code>
     */
    WM_DAO(7),
    /**
     * <pre>
     * 忠义堂
     * </pre>
     *
     * <code>WM_TANG = 8;</code>
     */
    WM_TANG(8),
    /**
     * <pre>
     * 水浒传-触发高级玩法小玛丽的图标
     * </pre>
     *
     * <code>WM_HIGHER = 50;</code>
     */
    WM_HIGHER(50),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>WM_UNSPECIFIED = 0;</code>
     */
    public static final int WM_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * 斧子
     * </pre>
     *
     * <code>WM_AXE = 1;</code>
     */
    public static final int WM_AXE_VALUE = 1;
    /**
     * <pre>
     *长枪
     * </pre>
     *
     * <code>WM_SPEAR = 2;</code>
     */
    public static final int WM_SPEAR_VALUE = 2;
    /**
     * <pre>
     *刀
     * </pre>
     *
     * <code>WM_CUT = 3;</code>
     */
    public static final int WM_CUT_VALUE = 3;
    /**
     * <pre>
     *鲁智深
     * </pre>
     *
     * <code>WM_LU = 4;</code>
     */
    public static final int WM_LU_VALUE = 4;
    /**
     * <pre>
     * 林冲
     * </pre>
     *
     * <code>WM_LIN = 5;</code>
     */
    public static final int WM_LIN_VALUE = 5;
    /**
     * <pre>
     * 宋江
     * </pre>
     *
     * <code>WM_SONG = 6;</code>
     */
    public static final int WM_SONG_VALUE = 6;
    /**
     * <pre>
     * 替天行道
     * </pre>
     *
     * <code>WM_DAO = 7;</code>
     */
    public static final int WM_DAO_VALUE = 7;
    /**
     * <pre>
     * 忠义堂
     * </pre>
     *
     * <code>WM_TANG = 8;</code>
     */
    public static final int WM_TANG_VALUE = 8;
    /**
     * <pre>
     * 水浒传-触发高级玩法小玛丽的图标
     * </pre>
     *
     * <code>WM_HIGHER = 50;</code>
     */
    public static final int WM_HIGHER_VALUE = 50;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WaterMargin valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static WaterMargin forNumber(int value) {
      switch (value) {
        case 0: return WM_UNSPECIFIED;
        case 1: return WM_AXE;
        case 2: return WM_SPEAR;
        case 3: return WM_CUT;
        case 4: return WM_LU;
        case 5: return WM_LIN;
        case 6: return WM_SONG;
        case 7: return WM_DAO;
        case 8: return WM_TANG;
        case 50: return WM_HIGHER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WaterMargin>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WaterMargin> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WaterMargin>() {
            public WaterMargin findValueByNumber(int number) {
              return WaterMargin.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(15);
    }

    private static final WaterMargin[] VALUES = values();

    public static WaterMargin valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WaterMargin(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.WaterMargin)
  }

  /**
   * <pre>
   *水浒传-小玛丽高级场符号
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.WMHigher}
   */
  public enum WMHigher
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>WH_UNSPECIFIED = 0;</code>
     */
    WH_UNSPECIFIED(0),
    /**
     * <pre>
     * 斧子
     * </pre>
     *
     * <code>WH_AXE = 1;</code>
     */
    WH_AXE(1),
    /**
     * <pre>
     *长枪
     * </pre>
     *
     * <code>WH_SPEAR = 2;</code>
     */
    WH_SPEAR(2),
    /**
     * <pre>
     *刀
     * </pre>
     *
     * <code>WH_CUT = 3;</code>
     */
    WH_CUT(3),
    /**
     * <pre>
     *鲁智深
     * </pre>
     *
     * <code>WH_LU = 4;</code>
     */
    WH_LU(4),
    /**
     * <pre>
     * 林冲
     * </pre>
     *
     * <code>WH_LIN = 5;</code>
     */
    WH_LIN(5),
    /**
     * <pre>
     * 宋江
     * </pre>
     *
     * <code>WH_SONG = 6;</code>
     */
    WH_SONG(6),
    /**
     * <pre>
     * 替天行道
     * </pre>
     *
     * <code>WH_DAO = 7;</code>
     */
    WH_DAO(7),
    /**
     * <pre>
     * 忠义堂
     * </pre>
     *
     * <code>WH_TANG = 8;</code>
     */
    WH_TANG(8),
    /**
     * <pre>
     * 退出
     * </pre>
     *
     * <code>WH_EXIT = 100;</code>
     */
    WH_EXIT(100),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>WH_UNSPECIFIED = 0;</code>
     */
    public static final int WH_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * 斧子
     * </pre>
     *
     * <code>WH_AXE = 1;</code>
     */
    public static final int WH_AXE_VALUE = 1;
    /**
     * <pre>
     *长枪
     * </pre>
     *
     * <code>WH_SPEAR = 2;</code>
     */
    public static final int WH_SPEAR_VALUE = 2;
    /**
     * <pre>
     *刀
     * </pre>
     *
     * <code>WH_CUT = 3;</code>
     */
    public static final int WH_CUT_VALUE = 3;
    /**
     * <pre>
     *鲁智深
     * </pre>
     *
     * <code>WH_LU = 4;</code>
     */
    public static final int WH_LU_VALUE = 4;
    /**
     * <pre>
     * 林冲
     * </pre>
     *
     * <code>WH_LIN = 5;</code>
     */
    public static final int WH_LIN_VALUE = 5;
    /**
     * <pre>
     * 宋江
     * </pre>
     *
     * <code>WH_SONG = 6;</code>
     */
    public static final int WH_SONG_VALUE = 6;
    /**
     * <pre>
     * 替天行道
     * </pre>
     *
     * <code>WH_DAO = 7;</code>
     */
    public static final int WH_DAO_VALUE = 7;
    /**
     * <pre>
     * 忠义堂
     * </pre>
     *
     * <code>WH_TANG = 8;</code>
     */
    public static final int WH_TANG_VALUE = 8;
    /**
     * <pre>
     * 退出
     * </pre>
     *
     * <code>WH_EXIT = 100;</code>
     */
    public static final int WH_EXIT_VALUE = 100;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WMHigher valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static WMHigher forNumber(int value) {
      switch (value) {
        case 0: return WH_UNSPECIFIED;
        case 1: return WH_AXE;
        case 2: return WH_SPEAR;
        case 3: return WH_CUT;
        case 4: return WH_LU;
        case 5: return WH_LIN;
        case 6: return WH_SONG;
        case 7: return WH_DAO;
        case 8: return WH_TANG;
        case 100: return WH_EXIT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WMHigher>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WMHigher> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WMHigher>() {
            public WMHigher findValueByNumber(int number) {
              return WMHigher.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(16);
    }

    private static final WMHigher[] VALUES = values();

    public static WMHigher valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WMHigher(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.WMHigher)
  }

  /**
   * <pre>
   *水浒传-比倍
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.WMDice}
   */
  public enum WMDice
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>WD_UNSPECIFIED = 0;</code>
     */
    WD_UNSPECIFIED(0),
    /**
     * <pre>
     * 小
     * </pre>
     *
     * <code>WD_SMALL = 1;</code>
     */
    WD_SMALL(1),
    /**
     * <pre>
     * 和
     * </pre>
     *
     * <code>WD_TIE = 2;</code>
     */
    WD_TIE(2),
    /**
     * <pre>
     * 大
     * </pre>
     *
     * <code>WD_BIG = 3;</code>
     */
    WD_BIG(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>WD_UNSPECIFIED = 0;</code>
     */
    public static final int WD_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * 小
     * </pre>
     *
     * <code>WD_SMALL = 1;</code>
     */
    public static final int WD_SMALL_VALUE = 1;
    /**
     * <pre>
     * 和
     * </pre>
     *
     * <code>WD_TIE = 2;</code>
     */
    public static final int WD_TIE_VALUE = 2;
    /**
     * <pre>
     * 大
     * </pre>
     *
     * <code>WD_BIG = 3;</code>
     */
    public static final int WD_BIG_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WMDice valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static WMDice forNumber(int value) {
      switch (value) {
        case 0: return WD_UNSPECIFIED;
        case 1: return WD_SMALL;
        case 2: return WD_TIE;
        case 3: return WD_BIG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WMDice>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WMDice> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WMDice>() {
            public WMDice findValueByNumber(int number) {
              return WMDice.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(17);
    }

    private static final WMDice[] VALUES = values();

    public static WMDice valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WMDice(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.WMDice)
  }

  /**
   * <pre>
   *水浒传-----------------end
   *金猪送福
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.Pig}
   */
  public enum Pig
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>PG_UNSPECIFIED = 0;</code>
     */
    PG_UNSPECIFIED(0),
    /**
     * <pre>
     * 九
     * </pre>
     *
     * <code>PG_9 = 1;</code>
     */
    PG_9(1),
    /**
     * <pre>
     *十
     * </pre>
     *
     * <code>PG_10 = 2;</code>
     */
    PG_10(2),
    /**
     * <pre>
     *11
     * </pre>
     *
     * <code>PG_11 = 3;</code>
     */
    PG_11(3),
    /**
     * <pre>
     *12
     * </pre>
     *
     * <code>PG_12 = 4;</code>
     */
    PG_12(4),
    /**
     * <pre>
     * 13
     * </pre>
     *
     * <code>PG_13 = 5;</code>
     */
    PG_13(5),
    /**
     * <pre>
     * 太
     * </pre>
     *
     * <code>PG_TAI = 6;</code>
     */
    PG_TAI(6),
    /**
     * <pre>
     * 铜钱
     * </pre>
     *
     * <code>PG_COPPER = 7;</code>
     */
    PG_COPPER(7),
    /**
     * <pre>
     * 荷花
     * </pre>
     *
     * <code>PG_LOTUS = 8;</code>
     */
    PG_LOTUS(8),
    /**
     * <pre>
     * 灯笼
     * </pre>
     *
     * <code>PG_GLIM = 9;</code>
     */
    PG_GLIM(9),
    /**
     * <pre>
     * 福
     * </pre>
     *
     * <code>PG_FU = 10;</code>
     */
    PG_FU(10),
    /**
     * <pre>
     * 鱼
     * </pre>
     *
     * <code>PG_FISH = 11;</code>
     */
    PG_FISH(11),
    /**
     * <pre>
     * 免费次数-福
     * </pre>
     *
     * <code>PG_FREE = 50;</code>
     */
    PG_FREE(50),
    /**
     * <pre>
     * 百搭
     * </pre>
     *
     * <code>PG_WILD = 60;</code>
     */
    PG_WILD(60),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>PG_UNSPECIFIED = 0;</code>
     */
    public static final int PG_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * 九
     * </pre>
     *
     * <code>PG_9 = 1;</code>
     */
    public static final int PG_9_VALUE = 1;
    /**
     * <pre>
     *十
     * </pre>
     *
     * <code>PG_10 = 2;</code>
     */
    public static final int PG_10_VALUE = 2;
    /**
     * <pre>
     *11
     * </pre>
     *
     * <code>PG_11 = 3;</code>
     */
    public static final int PG_11_VALUE = 3;
    /**
     * <pre>
     *12
     * </pre>
     *
     * <code>PG_12 = 4;</code>
     */
    public static final int PG_12_VALUE = 4;
    /**
     * <pre>
     * 13
     * </pre>
     *
     * <code>PG_13 = 5;</code>
     */
    public static final int PG_13_VALUE = 5;
    /**
     * <pre>
     * 太
     * </pre>
     *
     * <code>PG_TAI = 6;</code>
     */
    public static final int PG_TAI_VALUE = 6;
    /**
     * <pre>
     * 铜钱
     * </pre>
     *
     * <code>PG_COPPER = 7;</code>
     */
    public static final int PG_COPPER_VALUE = 7;
    /**
     * <pre>
     * 荷花
     * </pre>
     *
     * <code>PG_LOTUS = 8;</code>
     */
    public static final int PG_LOTUS_VALUE = 8;
    /**
     * <pre>
     * 灯笼
     * </pre>
     *
     * <code>PG_GLIM = 9;</code>
     */
    public static final int PG_GLIM_VALUE = 9;
    /**
     * <pre>
     * 福
     * </pre>
     *
     * <code>PG_FU = 10;</code>
     */
    public static final int PG_FU_VALUE = 10;
    /**
     * <pre>
     * 鱼
     * </pre>
     *
     * <code>PG_FISH = 11;</code>
     */
    public static final int PG_FISH_VALUE = 11;
    /**
     * <pre>
     * 免费次数-福
     * </pre>
     *
     * <code>PG_FREE = 50;</code>
     */
    public static final int PG_FREE_VALUE = 50;
    /**
     * <pre>
     * 百搭
     * </pre>
     *
     * <code>PG_WILD = 60;</code>
     */
    public static final int PG_WILD_VALUE = 60;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Pig valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Pig forNumber(int value) {
      switch (value) {
        case 0: return PG_UNSPECIFIED;
        case 1: return PG_9;
        case 2: return PG_10;
        case 3: return PG_11;
        case 4: return PG_12;
        case 5: return PG_13;
        case 6: return PG_TAI;
        case 7: return PG_COPPER;
        case 8: return PG_LOTUS;
        case 9: return PG_GLIM;
        case 10: return PG_FU;
        case 11: return PG_FISH;
        case 50: return PG_FREE;
        case 60: return PG_WILD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Pig>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Pig> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Pig>() {
            public Pig findValueByNumber(int number) {
              return Pig.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(18);
    }

    private static final Pig[] VALUES = values();

    public static Pig valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Pig(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.Pig)
  }

  /**
   * <pre>
   *僵尸新娘
   * </pre>
   *
   * Protobuf enum {@code com.z.model.proto.Corpse}
   */
  public enum Corpse
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>C_UNSPECIFIED = 0;</code>
     */
    C_UNSPECIFIED(0),
    /**
     * <pre>
     *十
     * </pre>
     *
     * <code>C_10 = 1;</code>
     */
    C_10(1),
    /**
     * <pre>
     *11
     * </pre>
     *
     * <code>C_11 = 2;</code>
     */
    C_11(2),
    /**
     * <pre>
     *12
     * </pre>
     *
     * <code>C_12 = 3;</code>
     */
    C_12(3),
    /**
     * <pre>
     * 13
     * </pre>
     *
     * <code>C_13 = 4;</code>
     */
    C_13(4),
    /**
     * <pre>
     * A
     * </pre>
     *
     * <code>C_A = 5;</code>
     */
    C_A(5),
    /**
     * <pre>
     *骷髅
     * </pre>
     *
     * <code>C_Skull = 6;</code>
     */
    C_Skull(6),
    /**
     * <pre>
     * 小孩
     * </pre>
     *
     * <code>C_BOY = 7;</code>
     */
    C_BOY(7),
    /**
     * <pre>
     * 男僵尸
     * </pre>
     *
     * <code>C_MAN = 8;</code>
     */
    C_MAN(8),
    /**
     * <pre>
     * 新娘
     * </pre>
     *
     * <code>C_BRIDE = 9;</code>
     */
    C_BRIDE(9),
    /**
     * <pre>
     * 免费次数
     * </pre>
     *
     * <code>C_FREE = 50;</code>
     */
    C_FREE(50),
    /**
     * <pre>
     * 百搭
     * </pre>
     *
     * <code>C_WILD = 60;</code>
     */
    C_WILD(60),
    /**
     * <pre>
     *进入小游戏图标
     * </pre>
     *
     * <code>C_BONUS = 100;</code>
     */
    C_BONUS(100),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 默认值，未指定的符号
     * </pre>
     *
     * <code>C_UNSPECIFIED = 0;</code>
     */
    public static final int C_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     *十
     * </pre>
     *
     * <code>C_10 = 1;</code>
     */
    public static final int C_10_VALUE = 1;
    /**
     * <pre>
     *11
     * </pre>
     *
     * <code>C_11 = 2;</code>
     */
    public static final int C_11_VALUE = 2;
    /**
     * <pre>
     *12
     * </pre>
     *
     * <code>C_12 = 3;</code>
     */
    public static final int C_12_VALUE = 3;
    /**
     * <pre>
     * 13
     * </pre>
     *
     * <code>C_13 = 4;</code>
     */
    public static final int C_13_VALUE = 4;
    /**
     * <pre>
     * A
     * </pre>
     *
     * <code>C_A = 5;</code>
     */
    public static final int C_A_VALUE = 5;
    /**
     * <pre>
     *骷髅
     * </pre>
     *
     * <code>C_Skull = 6;</code>
     */
    public static final int C_Skull_VALUE = 6;
    /**
     * <pre>
     * 小孩
     * </pre>
     *
     * <code>C_BOY = 7;</code>
     */
    public static final int C_BOY_VALUE = 7;
    /**
     * <pre>
     * 男僵尸
     * </pre>
     *
     * <code>C_MAN = 8;</code>
     */
    public static final int C_MAN_VALUE = 8;
    /**
     * <pre>
     * 新娘
     * </pre>
     *
     * <code>C_BRIDE = 9;</code>
     */
    public static final int C_BRIDE_VALUE = 9;
    /**
     * <pre>
     * 免费次数
     * </pre>
     *
     * <code>C_FREE = 50;</code>
     */
    public static final int C_FREE_VALUE = 50;
    /**
     * <pre>
     * 百搭
     * </pre>
     *
     * <code>C_WILD = 60;</code>
     */
    public static final int C_WILD_VALUE = 60;
    /**
     * <pre>
     *进入小游戏图标
     * </pre>
     *
     * <code>C_BONUS = 100;</code>
     */
    public static final int C_BONUS_VALUE = 100;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Corpse valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Corpse forNumber(int value) {
      switch (value) {
        case 0: return C_UNSPECIFIED;
        case 1: return C_10;
        case 2: return C_11;
        case 3: return C_12;
        case 4: return C_13;
        case 5: return C_A;
        case 6: return C_Skull;
        case 7: return C_BOY;
        case 8: return C_MAN;
        case 9: return C_BRIDE;
        case 50: return C_FREE;
        case 60: return C_WILD;
        case 100: return C_BONUS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Corpse>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Corpse> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Corpse>() {
            public Corpse findValueByNumber(int number) {
              return Corpse.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.getDescriptor().getEnumTypes().get(19);
    }

    private static final Corpse[] VALUES = values();

    public static Corpse valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Corpse(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.z.model.proto.Corpse)
  }

  public interface CardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.z.model.proto.Card)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>.com.z.model.proto.CardSuit suit = 2;</code>
     * @return The enum numeric value on the wire for suit.
     */
    int getSuitValue();
    /**
     * <code>.com.z.model.proto.CardSuit suit = 2;</code>
     * @return The suit.
     */
    com.z.model.proto.CommonGame.CardSuit getSuit();
  }
  /**
   * <pre>
   * 卡牌数据
   * </pre>
   *
   * Protobuf type {@code com.z.model.proto.Card}
   */
  public static final class Card extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.z.model.proto.Card)
      CardOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Card.newBuilder() to construct.
    private Card(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Card() {
      suit_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Card();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.z.model.proto.CommonGame.internal_static_com_z_model_proto_Card_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.z.model.proto.CommonGame.internal_static_com_z_model_proto_Card_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.z.model.proto.CommonGame.Card.class, com.z.model.proto.CommonGame.Card.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int SUIT_FIELD_NUMBER = 2;
    private int suit_;
    /**
     * <code>.com.z.model.proto.CardSuit suit = 2;</code>
     * @return The enum numeric value on the wire for suit.
     */
    @java.lang.Override public int getSuitValue() {
      return suit_;
    }
    /**
     * <code>.com.z.model.proto.CardSuit suit = 2;</code>
     * @return The suit.
     */
    @java.lang.Override public com.z.model.proto.CommonGame.CardSuit getSuit() {
      @SuppressWarnings("deprecation")
      com.z.model.proto.CommonGame.CardSuit result = com.z.model.proto.CommonGame.CardSuit.valueOf(suit_);
      return result == null ? com.z.model.proto.CommonGame.CardSuit.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (suit_ != com.z.model.proto.CommonGame.CardSuit.Spades.getNumber()) {
        output.writeEnum(2, suit_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (suit_ != com.z.model.proto.CommonGame.CardSuit.Spades.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, suit_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.z.model.proto.CommonGame.Card)) {
        return super.equals(obj);
      }
      com.z.model.proto.CommonGame.Card other = (com.z.model.proto.CommonGame.Card) obj;

      if (getId()
          != other.getId()) return false;
      if (suit_ != other.suit_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + SUIT_FIELD_NUMBER;
      hash = (53 * hash) + suit_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.z.model.proto.CommonGame.Card parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.z.model.proto.CommonGame.Card parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.z.model.proto.CommonGame.Card parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.z.model.proto.CommonGame.Card parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.z.model.proto.CommonGame.Card parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.z.model.proto.CommonGame.Card parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.z.model.proto.CommonGame.Card parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.z.model.proto.CommonGame.Card parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.z.model.proto.CommonGame.Card parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.z.model.proto.CommonGame.Card parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.z.model.proto.CommonGame.Card parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.z.model.proto.CommonGame.Card parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.z.model.proto.CommonGame.Card prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 卡牌数据
     * </pre>
     *
     * Protobuf type {@code com.z.model.proto.Card}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.z.model.proto.Card)
        com.z.model.proto.CommonGame.CardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.z.model.proto.CommonGame.internal_static_com_z_model_proto_Card_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.z.model.proto.CommonGame.internal_static_com_z_model_proto_Card_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.z.model.proto.CommonGame.Card.class, com.z.model.proto.CommonGame.Card.Builder.class);
      }

      // Construct using com.z.model.proto.CommonGame.Card.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        suit_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.z.model.proto.CommonGame.internal_static_com_z_model_proto_Card_descriptor;
      }

      @java.lang.Override
      public com.z.model.proto.CommonGame.Card getDefaultInstanceForType() {
        return com.z.model.proto.CommonGame.Card.getDefaultInstance();
      }

      @java.lang.Override
      public com.z.model.proto.CommonGame.Card build() {
        com.z.model.proto.CommonGame.Card result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.z.model.proto.CommonGame.Card buildPartial() {
        com.z.model.proto.CommonGame.Card result = new com.z.model.proto.CommonGame.Card(this);
        result.id_ = id_;
        result.suit_ = suit_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.z.model.proto.CommonGame.Card) {
          return mergeFrom((com.z.model.proto.CommonGame.Card)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.z.model.proto.CommonGame.Card other) {
        if (other == com.z.model.proto.CommonGame.Card.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.suit_ != 0) {
          setSuitValue(other.getSuitValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt32();

                break;
              } // case 8
              case 16: {
                suit_ = input.readEnum();

                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int id_ ;
      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private int suit_ = 0;
      /**
       * <code>.com.z.model.proto.CardSuit suit = 2;</code>
       * @return The enum numeric value on the wire for suit.
       */
      @java.lang.Override public int getSuitValue() {
        return suit_;
      }
      /**
       * <code>.com.z.model.proto.CardSuit suit = 2;</code>
       * @param value The enum numeric value on the wire for suit to set.
       * @return This builder for chaining.
       */
      public Builder setSuitValue(int value) {
        
        suit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.z.model.proto.CardSuit suit = 2;</code>
       * @return The suit.
       */
      @java.lang.Override
      public com.z.model.proto.CommonGame.CardSuit getSuit() {
        @SuppressWarnings("deprecation")
        com.z.model.proto.CommonGame.CardSuit result = com.z.model.proto.CommonGame.CardSuit.valueOf(suit_);
        return result == null ? com.z.model.proto.CommonGame.CardSuit.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.z.model.proto.CardSuit suit = 2;</code>
       * @param value The suit to set.
       * @return This builder for chaining.
       */
      public Builder setSuit(com.z.model.proto.CommonGame.CardSuit value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        suit_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.z.model.proto.CardSuit suit = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuit() {
        
        suit_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.z.model.proto.Card)
    }

    // @@protoc_insertion_point(class_scope:com.z.model.proto.Card)
    private static final com.z.model.proto.CommonGame.Card DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.z.model.proto.CommonGame.Card();
    }

    public static com.z.model.proto.CommonGame.Card getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Card>
        PARSER = new com.google.protobuf.AbstractParser<Card>() {
      @java.lang.Override
      public Card parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Card> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Card> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.z.model.proto.CommonGame.Card getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_z_model_proto_Card_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_z_model_proto_Card_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021common_game.proto\022\021com.z.model.proto\"=" +
      "\n\004Card\022\n\n\002id\030\001 \001(\005\022)\n\004suit\030\002 \001(\0162\033.com.z" +
      ".model.proto.CardSuit*Z\n\010CardSuit\022\n\n\006Spa" +
      "des\020\000\022\n\n\006Hearts\020\001\022\014\n\010Diamonds\020\002\022\t\n\005Clubs" +
      "\020\003\022\014\n\010BigJoker\020d\022\017\n\nSmallJoker\020\310\001*\247\002\n\010Ga" +
      "meType\022\020\n\014GAME_DEFUALT\020\000\022\025\n\021JINGDIAN_XIA" +
      "OMALI\020\001\022\024\n\020BAIBIAN_XIAOMALI\020\002\022\r\n\tMAJIANG" +
      "_2\020\003\022\010\n\004FISH\020\004\022\021\n\rJIUXIANLAWANG\020\005\022\017\n\013SHU" +
      "IHUZHUAN\020\006\022\013\n\007ALADING\020\007\022\021\n\rBAIREN_NIUNIU" +
      "\020\010\022\017\n\013BINGQIUTUPO\020\t\022\021\n\rSHAOLIN_ZUQIU\020\n\022\024" +
      "\n\020JIANGSHIXINNIANG\020\013\022\020\n\014JINZHUSONGFU\020\014\022\033" +
      "\n\027BAIBIAN_XIAOMALI_HIGHER\020f\022\026\n\022SHUIHUZHU" +
      "AN_HIGHER\020j*H\n\tGameState\022\025\n\021WAITING_FOR_" +
      "PLAYE\020\000\022\013\n\007BETTING\020\001\022\013\n\007DEALING\020\002\022\n\n\006RES" +
      "ULT\020\003*1\n\010RoomType\022\007\n\003ONE\020\000\022\007\n\003TWO\020\001\022\t\n\005T" +
      "HREE\020\002\022\010\n\004FOUR\020\003*\242\001\n\007NiuType\022\014\n\010NIU_ZERO" +
      "\020\000\022\013\n\007NIU_ONE\020\001\022\013\n\007NIU_TWO\020\002\022\r\n\tNIU_THRE" +
      "E\020\003\022\014\n\010NIU_FOUR\020\004\022\014\n\010NIU_FIVE\020\005\022\013\n\007NIU_S" +
      "IX\020\006\022\r\n\tNIU_SEVEN\020\007\022\r\n\tNIU_EIGHT\020\010\022\014\n\010NI" +
      "U_NINE\020\t\022\013\n\007NIU_NIU\020\n*\'\n\010WinState\022\010\n\004DRA" +
      "W\020\000\022\007\n\003WIN\020\001\022\010\n\004FAIL\020\002*\251\001\n\004Mali\022\021\n\rM_UNS" +
      "PECIFIED\020\000\022\n\n\006BANANA\020\001\022\016\n\nWATERMELON\020\002\022\t" +
      "\n\005LEMON\020\003\022\t\n\005GRAPE\020\004\022\n\n\006ANANAS\020\005\022\010\n\004BELL" +
      "\020\006\022\n\n\006CHERRY\020\007\022\007\n\003BAR\020\010\022\010\n\004WILD\0202\022\r\n\tGOL" +
      "D_WILD\020d\022\n\n\005BONUS\020\310\001\022\014\n\007SCARRER\020\254\002*\222\001\n\nM" +
      "aliHigher\022\021\n\rH_UNSPECIFIED\020\000\022\014\n\010H_BANANA" +
      "\020\001\022\020\n\014H_WATERMELON\020\002\022\013\n\007H_LEMON\020\003\022\013\n\007H_G" +
      "RAPE\020\004\022\014\n\010H_ANANAS\020\005\022\014\n\010H_CHERRY\020\006\022\013\n\007H_" +
      "BONUS\020\007\022\016\n\nH_DINAMITE\020d*v\n\002MJ\022\013\n\007DEFAULT" +
      "\020\000\022\006\n\002FA\020\t\022\007\n\003ZHO\020\010\022\t\n\005KUANG\020\007\022\007\n\003W_8\020\006\022" +
      "\007\n\003B_5\020\005\022\007\n\003T_5\020\004\022\007\n\003B_3\020\003\022\007\n\003B_2\020\002\022\007\n\003T" +
      "_2\020\001\022\006\n\002HU\0202\022\t\n\005BAIDA\020<*\307\002\n\010FishType\022\016\n\n" +
      "FT_DEFAULT\020\000\022\017\n\013KONG_QUE_YU\020\001\022\020\n\014XIAO_CH" +
      "OU_YU\020\002\022\017\n\013XIAO_LAN_YU\020\003\022\020\n\014XIAO_QING_YU" +
      "\020\004\022\021\n\rXIAO_HUANG_YU\020\005\022\016\n\nCAI_YUN_YU\020\006\022\020\n" +
      "\014JIN_QIANG_YU\020\007\022\020\n\014DENG_LONG_YU\020\010\022\022\n\016DA_" +
      "YAN_JING_YU\020\t\022\r\n\tCI_WEI_YU\020\n\022\016\n\nSHI_BAN_" +
      "YU\020\013\022\020\n\014SHEN_XIAN_YU\020\014\022\r\n\tHU_DIE_YU\020\r\022\017\n" +
      "\013XI_SHUAI_YU\020\016\022\r\n\tMO_GUI_YU\020\017\022\n\n\006WU_GUI\020" +
      "\020\022\016\n\nYIN_SHA_YU\020\021\022\016\n\nJIN_SHA_YU\020\022*\212\001\n\010Fi" +
      "shFire\022\017\n\013FFT_DEFAULT\020\000\022\t\n\005FFT_1\020\001\022\t\n\005FF" +
      "T_2\020\002\022\t\n\005FFT_3\020\003\022\t\n\005FFT_4\020\004\022\t\n\005FFT_5\020\005\022\t" +
      "\n\005FFT_6\020\006\022\t\n\005FFT_7\020\007\022\t\n\005FFT_8\020\010\022\t\n\005FFT_9" +
      "\020\t\022\n\n\006FFT_10\020\n*\342\001\n\005LINE9\022\022\n\016L9_UNSPECIFI" +
      "ED\020\000\022\r\n\tL9_ANANAS\020\001\022\r\n\tL9_BANANA\020\002\022\013\n\007L9" +
      "_BELL\020\003\022\014\n\010L9_GRAPE\020\004\022\r\n\tL9_CHERRY\020\005\022\014\n\010" +
      "L9_APPLE\020\006\022\021\n\rL9_WATERMELON\020\007\022\014\n\010L9_MANG" +
      "O\020\010\022\014\n\010L9_ORAGE\020\t\022\r\n\tL9_LICHEE\020\n\022\n\n\006L9_B" +
      "AR\020\013\022\010\n\004L9_7\020M\022\016\n\nL9_DIAMOND\020d\022\013\n\006L9_BOX" +
      "\020\310\001*\271\001\n\010FOOTBALL\022\022\n\016FT_UNSPECIFIED\020\000\022\t\n\005" +
      "FT_10\020\001\022\t\n\005FT_11\020\002\022\t\n\005FT_12\020\003\022\t\n\005FT_13\020\004" +
      "\022\010\n\004FT_A\020\005\022\014\n\010FT_MONK1\020\006\022\014\n\010FT_MONK2\020\007\022\014" +
      "\n\010FT_MONK3\020\010\022\014\n\010FT_MONK4\020\t\022\014\n\010FT_MONK5\020\n" +
      "\022\014\n\010FT_BAIDA\020d\022\017\n\nFT_SCATTER\020\310\001*\243\001\n\007Alad" +
      "din\022\021\n\rA_UNSPECIFIED\020\000\022\010\n\004A_10\020\001\022\010\n\004A_11" +
      "\020\002\022\010\n\004A_12\020\003\022\010\n\004A_13\020\004\022\007\n\003A_A\020\005\022\t\n\005A_CUP" +
      "\020\006\022\013\n\007A_Knife\020\007\022\n\n\006A_Ring\020\010\022\014\n\010A_TORQUE\020" +
      "\t\022\t\n\005A_HAT\020\n\022\n\n\006A_FREE\0202\022\013\n\007A_BAIDA\020<*\243\001" +
      "\n\004Puck\022\021\n\rP_UNSPECIFIED\020\000\022\t\n\005P_CAR\020\001\022\n\n\006" +
      "P_SHOE\020\002\022\013\n\007P_STICK\020\003\022\n\n\006P_PUCK\020\004\022\t\n\005P_T" +
      "WO\020\005\022\013\n\007P_G_FAT\020\006\022\013\n\007P_B_FAT\020\007\022\014\n\010P_G_TH" +
      "IN\020\010\022\014\n\010P_R_THIN\020\t\022\n\n\006P_FREE\0202\022\013\n\007P_BAID" +
      "A\020<*\223\001\n\013WaterMargin\022\022\n\016WM_UNSPECIFIED\020\000\022" +
      "\n\n\006WM_AXE\020\001\022\014\n\010WM_SPEAR\020\002\022\n\n\006WM_CUT\020\003\022\t\n" +
      "\005WM_LU\020\004\022\n\n\006WM_LIN\020\005\022\013\n\007WM_SONG\020\006\022\n\n\006WM_" +
      "DAO\020\007\022\013\n\007WM_TANG\020\010\022\r\n\tWM_HIGHER\0202*\216\001\n\010WM" +
      "Higher\022\022\n\016WH_UNSPECIFIED\020\000\022\n\n\006WH_AXE\020\001\022\014" +
      "\n\010WH_SPEAR\020\002\022\n\n\006WH_CUT\020\003\022\t\n\005WH_LU\020\004\022\n\n\006W" +
      "H_LIN\020\005\022\013\n\007WH_SONG\020\006\022\n\n\006WH_DAO\020\007\022\013\n\007WH_T" +
      "ANG\020\010\022\013\n\007WH_EXIT\020d*B\n\006WMDice\022\022\n\016WD_UNSPE" +
      "CIFIED\020\000\022\014\n\010WD_SMALL\020\001\022\n\n\006WD_TIE\020\002\022\n\n\006WD" +
      "_BIG\020\003*\267\001\n\003Pig\022\022\n\016PG_UNSPECIFIED\020\000\022\010\n\004PG" +
      "_9\020\001\022\t\n\005PG_10\020\002\022\t\n\005PG_11\020\003\022\t\n\005PG_12\020\004\022\t\n" +
      "\005PG_13\020\005\022\n\n\006PG_TAI\020\006\022\r\n\tPG_COPPER\020\007\022\014\n\010P" +
      "G_LOTUS\020\010\022\013\n\007PG_GLIM\020\t\022\t\n\005PG_FU\020\n\022\013\n\007PG_" +
      "FISH\020\013\022\013\n\007PG_FREE\0202\022\013\n\007PG_WILD\020<*\241\001\n\006Cor" +
      "pse\022\021\n\rC_UNSPECIFIED\020\000\022\010\n\004C_10\020\001\022\010\n\004C_11" +
      "\020\002\022\010\n\004C_12\020\003\022\010\n\004C_13\020\004\022\007\n\003C_A\020\005\022\013\n\007C_Sku" +
      "ll\020\006\022\t\n\005C_BOY\020\007\022\t\n\005C_MAN\020\010\022\013\n\007C_BRIDE\020\t\022" +
      "\n\n\006C_FREE\0202\022\n\n\006C_WILD\020<\022\013\n\007C_BONUS\020db\006pr" +
      "oto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_z_model_proto_Card_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_z_model_proto_Card_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_z_model_proto_Card_descriptor,
        new java.lang.String[] { "Id", "Suit", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
