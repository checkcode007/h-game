// source: proto/Game.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var proto_common_game_pb = require('../proto/common_game_pb.js');
goog.object.extend(proto, proto_common_game_pb);
goog.exportSymbol('proto.com.zgame.proto.GameMsg', null, global);
goog.exportSymbol('proto.com.zgame.proto.GameMsg.TypeCase', null, global);
goog.exportSymbol('proto.com.zgame.proto.Game_Req_20001', null, global);
goog.exportSymbol('proto.com.zgame.proto.Game_Res_20002', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.zgame.proto.GameMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.zgame.proto.GameMsg.oneofGroups_);
};
goog.inherits(proto.com.zgame.proto.GameMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.zgame.proto.GameMsg.displayName = 'proto.com.zgame.proto.GameMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.zgame.proto.Game_Req_20001 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.zgame.proto.Game_Req_20001, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.zgame.proto.Game_Req_20001.displayName = 'proto.com.zgame.proto.Game_Req_20001';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.zgame.proto.Game_Res_20002 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.zgame.proto.Game_Res_20002, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.zgame.proto.Game_Res_20002.displayName = 'proto.com.zgame.proto.Game_Res_20002';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.zgame.proto.GameMsg.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.com.zgame.proto.GameMsg.TypeCase = {
  TYPE_NOT_SET: 0,
  REQ10001: 2,
  RES10002: 3
};

/**
 * @return {proto.com.zgame.proto.GameMsg.TypeCase}
 */
proto.com.zgame.proto.GameMsg.prototype.getTypeCase = function() {
  return /** @type {proto.com.zgame.proto.GameMsg.TypeCase} */(jspb.Message.computeOneofCase(this, proto.com.zgame.proto.GameMsg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.zgame.proto.GameMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.com.zgame.proto.GameMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.zgame.proto.GameMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.zgame.proto.GameMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    req10001: (f = msg.getReq10001()) && proto.com.zgame.proto.Game_Req_20001.toObject(includeInstance, f),
    res10002: (f = msg.getRes10002()) && proto.com.zgame.proto.Game_Res_20002.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.zgame.proto.GameMsg}
 */
proto.com.zgame.proto.GameMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.zgame.proto.GameMsg;
  return proto.com.zgame.proto.GameMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.zgame.proto.GameMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.zgame.proto.GameMsg}
 */
proto.com.zgame.proto.GameMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.com.zgame.proto.Game_Req_20001;
      reader.readMessage(value,proto.com.zgame.proto.Game_Req_20001.deserializeBinaryFromReader);
      msg.setReq10001(value);
      break;
    case 3:
      var value = new proto.com.zgame.proto.Game_Res_20002;
      reader.readMessage(value,proto.com.zgame.proto.Game_Res_20002.deserializeBinaryFromReader);
      msg.setRes10002(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.zgame.proto.GameMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.zgame.proto.GameMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.zgame.proto.GameMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.zgame.proto.GameMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getReq10001();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.zgame.proto.Game_Req_20001.serializeBinaryToWriter
    );
  }
  f = message.getRes10002();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.zgame.proto.Game_Res_20002.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.com.zgame.proto.GameMsg.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.zgame.proto.GameMsg} returns this
 */
proto.com.zgame.proto.GameMsg.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Game_Req_20001 req10001 = 2;
 * @return {?proto.com.zgame.proto.Game_Req_20001}
 */
proto.com.zgame.proto.GameMsg.prototype.getReq10001 = function() {
  return /** @type{?proto.com.zgame.proto.Game_Req_20001} */ (
    jspb.Message.getWrapperField(this, proto.com.zgame.proto.Game_Req_20001, 2));
};


/**
 * @param {?proto.com.zgame.proto.Game_Req_20001|undefined} value
 * @return {!proto.com.zgame.proto.GameMsg} returns this
*/
proto.com.zgame.proto.GameMsg.prototype.setReq10001 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.com.zgame.proto.GameMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.zgame.proto.GameMsg} returns this
 */
proto.com.zgame.proto.GameMsg.prototype.clearReq10001 = function() {
  return this.setReq10001(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.zgame.proto.GameMsg.prototype.hasReq10001 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Game_Res_20002 res10002 = 3;
 * @return {?proto.com.zgame.proto.Game_Res_20002}
 */
proto.com.zgame.proto.GameMsg.prototype.getRes10002 = function() {
  return /** @type{?proto.com.zgame.proto.Game_Res_20002} */ (
    jspb.Message.getWrapperField(this, proto.com.zgame.proto.Game_Res_20002, 3));
};


/**
 * @param {?proto.com.zgame.proto.Game_Res_20002|undefined} value
 * @return {!proto.com.zgame.proto.GameMsg} returns this
*/
proto.com.zgame.proto.GameMsg.prototype.setRes10002 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.com.zgame.proto.GameMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.zgame.proto.GameMsg} returns this
 */
proto.com.zgame.proto.GameMsg.prototype.clearRes10002 = function() {
  return this.setRes10002(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.zgame.proto.GameMsg.prototype.hasRes10002 = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.zgame.proto.Game_Req_20001.prototype.toObject = function(opt_includeInstance) {
  return proto.com.zgame.proto.Game_Req_20001.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.zgame.proto.Game_Req_20001} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.zgame.proto.Game_Req_20001.toObject = function(includeInstance, msg) {
  var f, obj = {
    mahjongdata: (f = msg.getMahjongdata()) && proto_common_game_pb.MahjongData.toObject(includeInstance, f),
    msgdata: (f = msg.getMsgdata()) && proto_common_game_pb.CardData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.zgame.proto.Game_Req_20001}
 */
proto.com.zgame.proto.Game_Req_20001.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.zgame.proto.Game_Req_20001;
  return proto.com.zgame.proto.Game_Req_20001.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.zgame.proto.Game_Req_20001} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.zgame.proto.Game_Req_20001}
 */
proto.com.zgame.proto.Game_Req_20001.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_common_game_pb.MahjongData;
      reader.readMessage(value,proto_common_game_pb.MahjongData.deserializeBinaryFromReader);
      msg.setMahjongdata(value);
      break;
    case 2:
      var value = new proto_common_game_pb.CardData;
      reader.readMessage(value,proto_common_game_pb.CardData.deserializeBinaryFromReader);
      msg.setMsgdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.zgame.proto.Game_Req_20001.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.zgame.proto.Game_Req_20001.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.zgame.proto.Game_Req_20001} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.zgame.proto.Game_Req_20001.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMahjongdata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_common_game_pb.MahjongData.serializeBinaryToWriter
    );
  }
  f = message.getMsgdata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_common_game_pb.CardData.serializeBinaryToWriter
    );
  }
};


/**
 * optional MahjongData mahjongData = 1;
 * @return {?proto.com.zgame.proto.MahjongData}
 */
proto.com.zgame.proto.Game_Req_20001.prototype.getMahjongdata = function() {
  return /** @type{?proto.com.zgame.proto.MahjongData} */ (
    jspb.Message.getWrapperField(this, proto_common_game_pb.MahjongData, 1));
};


/**
 * @param {?proto.com.zgame.proto.MahjongData|undefined} value
 * @return {!proto.com.zgame.proto.Game_Req_20001} returns this
*/
proto.com.zgame.proto.Game_Req_20001.prototype.setMahjongdata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.zgame.proto.Game_Req_20001} returns this
 */
proto.com.zgame.proto.Game_Req_20001.prototype.clearMahjongdata = function() {
  return this.setMahjongdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.zgame.proto.Game_Req_20001.prototype.hasMahjongdata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CardData msgData = 2;
 * @return {?proto.com.zgame.proto.CardData}
 */
proto.com.zgame.proto.Game_Req_20001.prototype.getMsgdata = function() {
  return /** @type{?proto.com.zgame.proto.CardData} */ (
    jspb.Message.getWrapperField(this, proto_common_game_pb.CardData, 2));
};


/**
 * @param {?proto.com.zgame.proto.CardData|undefined} value
 * @return {!proto.com.zgame.proto.Game_Req_20001} returns this
*/
proto.com.zgame.proto.Game_Req_20001.prototype.setMsgdata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.zgame.proto.Game_Req_20001} returns this
 */
proto.com.zgame.proto.Game_Req_20001.prototype.clearMsgdata = function() {
  return this.setMsgdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.zgame.proto.Game_Req_20001.prototype.hasMsgdata = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.zgame.proto.Game_Res_20002.prototype.toObject = function(opt_includeInstance) {
  return proto.com.zgame.proto.Game_Res_20002.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.zgame.proto.Game_Res_20002} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.zgame.proto.Game_Res_20002.toObject = function(includeInstance, msg) {
  var f, obj = {
    mahjongdata: (f = msg.getMahjongdata()) && proto_common_game_pb.MahjongData.toObject(includeInstance, f),
    msgdata: (f = msg.getMsgdata()) && proto_common_game_pb.CardData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.zgame.proto.Game_Res_20002}
 */
proto.com.zgame.proto.Game_Res_20002.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.zgame.proto.Game_Res_20002;
  return proto.com.zgame.proto.Game_Res_20002.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.zgame.proto.Game_Res_20002} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.zgame.proto.Game_Res_20002}
 */
proto.com.zgame.proto.Game_Res_20002.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_common_game_pb.MahjongData;
      reader.readMessage(value,proto_common_game_pb.MahjongData.deserializeBinaryFromReader);
      msg.setMahjongdata(value);
      break;
    case 2:
      var value = new proto_common_game_pb.CardData;
      reader.readMessage(value,proto_common_game_pb.CardData.deserializeBinaryFromReader);
      msg.setMsgdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.zgame.proto.Game_Res_20002.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.zgame.proto.Game_Res_20002.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.zgame.proto.Game_Res_20002} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.zgame.proto.Game_Res_20002.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMahjongdata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_common_game_pb.MahjongData.serializeBinaryToWriter
    );
  }
  f = message.getMsgdata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_common_game_pb.CardData.serializeBinaryToWriter
    );
  }
};


/**
 * optional MahjongData mahjongData = 1;
 * @return {?proto.com.zgame.proto.MahjongData}
 */
proto.com.zgame.proto.Game_Res_20002.prototype.getMahjongdata = function() {
  return /** @type{?proto.com.zgame.proto.MahjongData} */ (
    jspb.Message.getWrapperField(this, proto_common_game_pb.MahjongData, 1));
};


/**
 * @param {?proto.com.zgame.proto.MahjongData|undefined} value
 * @return {!proto.com.zgame.proto.Game_Res_20002} returns this
*/
proto.com.zgame.proto.Game_Res_20002.prototype.setMahjongdata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.zgame.proto.Game_Res_20002} returns this
 */
proto.com.zgame.proto.Game_Res_20002.prototype.clearMahjongdata = function() {
  return this.setMahjongdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.zgame.proto.Game_Res_20002.prototype.hasMahjongdata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CardData msgData = 2;
 * @return {?proto.com.zgame.proto.CardData}
 */
proto.com.zgame.proto.Game_Res_20002.prototype.getMsgdata = function() {
  return /** @type{?proto.com.zgame.proto.CardData} */ (
    jspb.Message.getWrapperField(this, proto_common_game_pb.CardData, 2));
};


/**
 * @param {?proto.com.zgame.proto.CardData|undefined} value
 * @return {!proto.com.zgame.proto.Game_Res_20002} returns this
*/
proto.com.zgame.proto.Game_Res_20002.prototype.setMsgdata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.zgame.proto.Game_Res_20002} returns this
 */
proto.com.zgame.proto.Game_Res_20002.prototype.clearMsgdata = function() {
  return this.setMsgdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.zgame.proto.Game_Res_20002.prototype.hasMsgdata = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.com.zgame.proto);
