// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common_game.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Z.Model.Proto {

  /// <summary>Holder for reflection information generated from common_game.proto</summary>
  public static partial class CommonGameReflection {

    #region Descriptor
    /// <summary>File descriptor for common_game.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonGameReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFjb21tb25fZ2FtZS5wcm90bxIRY29tLnoubW9kZWwucHJvdG8iPQoEQ2Fy",
            "ZBIKCgJpZBgBIAEoBRIpCgRzdWl0GAIgASgOMhsuY29tLnoubW9kZWwucHJv",
            "dG8uQ2FyZFN1aXQqWgoIQ2FyZFN1aXQSCgoGU3BhZGVzEAASCgoGSGVhcnRz",
            "EAESDAoIRGlhbW9uZHMQAhIJCgVDbHVicxADEgwKCEJpZ0pva2VyEGQSDwoK",
            "U21hbGxKb2tlchDIASqnAgoIR2FtZVR5cGUSEAoMR0FNRV9ERUZVQUxUEAAS",
            "FQoRSklOR0RJQU5fWElBT01BTEkQARIUChBCQUlCSUFOX1hJQU9NQUxJEAIS",
            "DQoJTUFKSUFOR18yEAMSCAoERklTSBAEEhEKDUpJVVhJQU5MQVdBTkcQBRIP",
            "CgtTSFVJSFVaSFVBThAGEgsKB0FMQURJTkcQBxIRCg1CQUlSRU5fTklVTklV",
            "EAgSDwoLQklOR1FJVVRVUE8QCRIRCg1TSEFPTElOX1pVUUlVEAoSFAoQSklB",
            "TkdTSElYSU5OSUFORxALEhAKDEpJTlpIVVNPTkdGVRAMEhsKF0JBSUJJQU5f",
            "WElBT01BTElfSElHSEVSEGYSFgoSU0hVSUhVWkhVQU5fSElHSEVSEGoqSAoJ",
            "R2FtZVN0YXRlEhUKEVdBSVRJTkdfRk9SX1BMQVlFEAASCwoHQkVUVElORxAB",
            "EgsKB0RFQUxJTkcQAhIKCgZSRVNVTFQQAyoxCghSb29tVHlwZRIHCgNPTkUQ",
            "ABIHCgNUV08QARIJCgVUSFJFRRACEggKBEZPVVIQAyqiAQoHTml1VHlwZRIM",
            "CghOSVVfWkVSTxAAEgsKB05JVV9PTkUQARILCgdOSVVfVFdPEAISDQoJTklV",
            "X1RIUkVFEAMSDAoITklVX0ZPVVIQBBIMCghOSVVfRklWRRAFEgsKB05JVV9T",
            "SVgQBhINCglOSVVfU0VWRU4QBxINCglOSVVfRUlHSFQQCBIMCghOSVVfTklO",
            "RRAJEgsKB05JVV9OSVUQCionCghXaW5TdGF0ZRIICgREUkFXEAASBwoDV0lO",
            "EAESCAoERkFJTBACKqkBCgRNYWxpEhEKDU1fVU5TUEVDSUZJRUQQABIKCgZC",
            "QU5BTkEQARIOCgpXQVRFUk1FTE9OEAISCQoFTEVNT04QAxIJCgVHUkFQRRAE",
            "EgoKBkFOQU5BUxAFEggKBEJFTEwQBhIKCgZDSEVSUlkQBxIHCgNCQVIQCBII",
            "CgRXSUxEEDISDQoJR09MRF9XSUxEEGQSCgoFQk9OVVMQyAESDAoHU0NBUlJF",
            "UhCsAiqSAQoKTWFsaUhpZ2hlchIRCg1IX1VOU1BFQ0lGSUVEEAASDAoISF9C",
            "QU5BTkEQARIQCgxIX1dBVEVSTUVMT04QAhILCgdIX0xFTU9OEAMSCwoHSF9H",
            "UkFQRRAEEgwKCEhfQU5BTkFTEAUSDAoISF9DSEVSUlkQBhILCgdIX0JPTlVT",
            "EAcSDgoKSF9ESU5BTUlURRBkKnYKAk1KEgsKB0RFRkFVTFQQABIGCgJGQRAJ",
            "EgcKA1pITxAIEgkKBUtVQU5HEAcSBwoDV184EAYSBwoDQl81EAUSBwoDVF81",
            "EAQSBwoDQl8zEAMSBwoDQl8yEAISBwoDVF8yEAESBgoCSFUQMhIJCgVCQUlE",
            "QRA8KooDCghGaXNoVHlwZRIOCgpGVF9ERUZBVUxUEAASDwoLS09OR19RVUVf",
            "WVUQARIQCgxYSUFPX0NIT1VfWVUQAhIPCgtYSUFPX0xBTl9ZVRADEhAKDFhJ",
            "QU9fUUlOR19ZVRAEEhEKDVhJQU9fSFVBTkdfWVUQBRIOCgpDQUlfWVVOX1lV",
            "EAYSEAoMSklOX1FJQU5HX1lVEAcSEAoMREVOR19MT05HX1lVEAgSEgoOREFf",
            "WUFOX0pJTkdfWVUQCRINCglDSV9XRUlfWVUQChIOCgpTSElfQkFOX1lVEAsS",
            "EAoMU0hFTl9YSUFOX1lVEAwSDQoJSFVfRElFX1lVEA0SDwoLWElfU0hVQUlf",
            "WVUQDhINCglNT19HVUlfWVUQDxIKCgZXVV9HVUkQEBIOCgpZSU5fU0hBX1lV",
            "EBESDgoKSklOX1NIQV9ZVRASEg8KC0pJTl9MT05HX1lVEBMSCAoETE9ORxAU",
            "Eg4KCk1FSV9SRU5fWVUQFRIKCgZORV9aSEEQFhIKCgZNT05LRVkQFyqKAQoI",
            "RmlzaEZpcmUSDwoLRkZUX0RFRkFVTFQQABIJCgVGRlRfMRABEgkKBUZGVF8y",
            "EAISCQoFRkZUXzMQAxIJCgVGRlRfNBAEEgkKBUZGVF81EAUSCQoFRkZUXzYQ",
            "BhIJCgVGRlRfNxAHEgkKBUZGVF84EAgSCQoFRkZUXzkQCRIKCgZGRlRfMTAQ",
            "CiriAQoFTElORTkSEgoOTDlfVU5TUEVDSUZJRUQQABINCglMOV9BTkFOQVMQ",
            "ARINCglMOV9CQU5BTkEQAhILCgdMOV9CRUxMEAMSDAoITDlfR1JBUEUQBBIN",
            "CglMOV9DSEVSUlkQBRIMCghMOV9BUFBMRRAGEhEKDUw5X1dBVEVSTUVMT04Q",
            "BxIMCghMOV9NQU5HTxAIEgwKCEw5X09SQUdFEAkSDQoJTDlfTElDSEVFEAoS",
            "CgoGTDlfQkFSEAsSCAoETDlfNxBNEg4KCkw5X0RJQU1PTkQQZBILCgZMOV9C",
            "T1gQyAEquQEKCEZPT1RCQUxMEhIKDkZUX1VOU1BFQ0lGSUVEEAASCQoFRlRf",
            "MTAQARIJCgVGVF8xMRACEgkKBUZUXzEyEAMSCQoFRlRfMTMQBBIICgRGVF9B",
            "EAUSDAoIRlRfTU9OSzEQBhIMCghGVF9NT05LMhAHEgwKCEZUX01PTkszEAgS",
            "DAoIRlRfTU9OSzQQCRIMCghGVF9NT05LNRAKEgwKCEZUX0JBSURBEGQSDwoK",
            "RlRfU0NBVFRFUhDIASqjAQoHQWxhZGRpbhIRCg1BX1VOU1BFQ0lGSUVEEAAS",
            "CAoEQV8xMBABEggKBEFfMTEQAhIICgRBXzEyEAMSCAoEQV8xMxAEEgcKA0Ff",
            "QRAFEgkKBUFfQ1VQEAYSCwoHQV9LbmlmZRAHEgoKBkFfUmluZxAIEgwKCEFf",
            "VE9SUVVFEAkSCQoFQV9IQVQQChIKCgZBX0ZSRUUQMhILCgdBX0JBSURBEDwq",
            "owEKBFB1Y2sSEQoNUF9VTlNQRUNJRklFRBAAEgkKBVBfQ0FSEAESCgoGUF9T",
            "SE9FEAISCwoHUF9TVElDSxADEgoKBlBfUFVDSxAEEgkKBVBfVFdPEAUSCwoH",
            "UF9HX0ZBVBAGEgsKB1BfQl9GQVQQBxIMCghQX0dfVEhJThAIEgwKCFBfUl9U",
            "SElOEAkSCgoGUF9GUkVFEDISCwoHUF9CQUlEQRA8KpMBCgtXYXRlck1hcmdp",
            "bhISCg5XTV9VTlNQRUNJRklFRBAAEgoKBldNX0FYRRABEgwKCFdNX1NQRUFS",
            "EAISCgoGV01fQ1VUEAMSCQoFV01fTFUQBBIKCgZXTV9MSU4QBRILCgdXTV9T",
            "T05HEAYSCgoGV01fREFPEAcSCwoHV01fVEFORxAIEg0KCVdNX0hJR0hFUhAy",
            "Ko4BCghXTUhpZ2hlchISCg5XSF9VTlNQRUNJRklFRBAAEgoKBldIX0FYRRAB",
            "EgwKCFdIX1NQRUFSEAISCgoGV0hfQ1VUEAMSCQoFV0hfTFUQBBIKCgZXSF9M",
            "SU4QBRILCgdXSF9TT05HEAYSCgoGV0hfREFPEAcSCwoHV0hfVEFORxAIEgsK",
            "B1dIX0VYSVQQZCpCCgZXTURpY2USEgoOV0RfVU5TUEVDSUZJRUQQABIMCghX",
            "RF9TTUFMTBABEgoKBldEX1RJRRACEgoKBldEX0JJRxADKrcBCgNQaWcSEgoO",
            "UEdfVU5TUEVDSUZJRUQQABIICgRQR185EAESCQoFUEdfMTAQAhIJCgVQR18x",
            "MRADEgkKBVBHXzEyEAQSCQoFUEdfMTMQBRIKCgZQR19UQUkQBhINCglQR19D",
            "T1BQRVIQBxIMCghQR19MT1RVUxAIEgsKB1BHX0dMSU0QCRIJCgVQR19GVRAK",
            "EgsKB1BHX0ZJU0gQCxILCgdQR19GUkVFEDISCwoHUEdfV0lMRBA8KqEBCgZD",
            "b3Jwc2USEQoNQ19VTlNQRUNJRklFRBAAEggKBENfMTAQARIICgRDXzExEAIS",
            "CAoEQ18xMhADEggKBENfMTMQBBIHCgNDX0EQBRILCgdDX1NrdWxsEAYSCQoF",
            "Q19CT1kQBxIJCgVDX01BThAIEgsKB0NfQlJJREUQCRIKCgZDX0ZSRUUQMhIK",
            "CgZDX1dJTEQQPBILCgdDX0JPTlVTEGRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Com.Z.Model.Proto.CardSuit), typeof(global::Com.Z.Model.Proto.GameType), typeof(global::Com.Z.Model.Proto.GameState), typeof(global::Com.Z.Model.Proto.RoomType), typeof(global::Com.Z.Model.Proto.NiuType), typeof(global::Com.Z.Model.Proto.WinState), typeof(global::Com.Z.Model.Proto.Mali), typeof(global::Com.Z.Model.Proto.MaliHigher), typeof(global::Com.Z.Model.Proto.MJ), typeof(global::Com.Z.Model.Proto.FishType), typeof(global::Com.Z.Model.Proto.FishFire), typeof(global::Com.Z.Model.Proto.LINE9), typeof(global::Com.Z.Model.Proto.FOOTBALL), typeof(global::Com.Z.Model.Proto.Aladdin), typeof(global::Com.Z.Model.Proto.Puck), typeof(global::Com.Z.Model.Proto.WaterMargin), typeof(global::Com.Z.Model.Proto.WMHigher), typeof(global::Com.Z.Model.Proto.WMDice), typeof(global::Com.Z.Model.Proto.Pig), typeof(global::Com.Z.Model.Proto.Corpse), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Z.Model.Proto.Card), global::Com.Z.Model.Proto.Card.Parser, new[]{ "Id", "Suit" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CardSuit {
    /// <summary>
    ///黑桃
    /// </summary>
    [pbr::OriginalName("Spades")] Spades = 0,
    /// <summary>
    ///红桃
    /// </summary>
    [pbr::OriginalName("Hearts")] Hearts = 1,
    /// <summary>
    ///方片
    /// </summary>
    [pbr::OriginalName("Diamonds")] Diamonds = 2,
    /// <summary>
    ///梅花
    /// </summary>
    [pbr::OriginalName("Clubs")] Clubs = 3,
    /// <summary>
    ///大王
    /// </summary>
    [pbr::OriginalName("BigJoker")] BigJoker = 100,
    /// <summary>
    ///小王
    /// </summary>
    [pbr::OriginalName("SmallJoker")] SmallJoker = 200,
  }

  /// <summary>
  /// 游戏类型
  /// </summary>
  public enum GameType {
    /// <summary>
    ///为定义
    /// </summary>
    [pbr::OriginalName("GAME_DEFUALT")] GameDefualt = 0,
    /// <summary>
    /// 经典小码丽
    /// </summary>
    [pbr::OriginalName("JINGDIAN_XIAOMALI")] JingdianXiaomali = 1,
    /// <summary>
    /// 百变小码丽
    /// </summary>
    [pbr::OriginalName("BAIBIAN_XIAOMALI")] BaibianXiaomali = 2,
    /// <summary>
    /// 麻将2
    /// </summary>
    [pbr::OriginalName("MAJIANG_2")] Majiang2 = 3,
    /// <summary>
    /// 捕鱼
    /// </summary>
    [pbr::OriginalName("FISH")] Fish = 4,
    /// <summary>
    /// 九线拉王
    /// </summary>
    [pbr::OriginalName("JIUXIANLAWANG")] Jiuxianlawang = 5,
    /// <summary>
    /// 水浒传
    /// </summary>
    [pbr::OriginalName("SHUIHUZHUAN")] Shuihuzhuan = 6,
    /// <summary>
    /// 阿拉丁
    /// </summary>
    [pbr::OriginalName("ALADING")] Alading = 7,
    /// <summary>
    /// 百人牛牛
    /// </summary>
    [pbr::OriginalName("BAIREN_NIUNIU")] BairenNiuniu = 8,
    /// <summary>
    /// 冰球突破
    /// </summary>
    [pbr::OriginalName("BINGQIUTUPO")] Bingqiutupo = 9,
    /// <summary>
    /// 少林足球
    /// </summary>
    [pbr::OriginalName("SHAOLIN_ZUQIU")] ShaolinZuqiu = 10,
    /// <summary>
    /// 僵尸新娘
    /// </summary>
    [pbr::OriginalName("JIANGSHIXINNIANG")] Jiangshixinniang = 11,
    /// <summary>
    /// 金猪送福
    /// </summary>
    [pbr::OriginalName("JINZHUSONGFU")] Jinzhusongfu = 12,
    /// <summary>
    /// 百变小码丽-高级玩法
    /// </summary>
    [pbr::OriginalName("BAIBIAN_XIAOMALI_HIGHER")] BaibianXiaomaliHigher = 102,
    /// <summary>
    /// 水浒传->小码丽-高级玩法
    /// </summary>
    [pbr::OriginalName("SHUIHUZHUAN_HIGHER")] ShuihuzhuanHigher = 106,
  }

  public enum GameState {
    /// <summary>
    ///等待玩家
    /// </summary>
    [pbr::OriginalName("WAITING_FOR_PLAYE")] WaitingForPlaye = 0,
    /// <summary>
    ///下注阶段
    /// </summary>
    [pbr::OriginalName("BETTING")] Betting = 1,
    /// <summary>
    ///发牌阶段
    /// </summary>
    [pbr::OriginalName("DEALING")] Dealing = 2,
    /// <summary>
    ///计算结果阶段
    /// </summary>
    [pbr::OriginalName("RESULT")] Result = 3,
  }

  /// <summary>
  /// 房间类型
  /// </summary>
  public enum RoomType {
    /// <summary>
    ///初级
    /// </summary>
    [pbr::OriginalName("ONE")] One = 0,
    /// <summary>
    ///中级
    /// </summary>
    [pbr::OriginalName("TWO")] Two = 1,
    /// <summary>
    ///高级
    /// </summary>
    [pbr::OriginalName("THREE")] Three = 2,
    /// <summary>
    ///大师
    /// </summary>
    [pbr::OriginalName("FOUR")] Four = 3,
  }

  /// <summary>
  ///牛牛类型
  /// </summary>
  public enum NiuType {
    /// <summary>
    /// 无牛
    /// </summary>
    [pbr::OriginalName("NIU_ZERO")] NiuZero = 0,
    /// <summary>
    /// 牛一
    /// </summary>
    [pbr::OriginalName("NIU_ONE")] NiuOne = 1,
    /// <summary>
    /// 牛二
    /// </summary>
    [pbr::OriginalName("NIU_TWO")] NiuTwo = 2,
    /// <summary>
    /// 牛三
    /// </summary>
    [pbr::OriginalName("NIU_THREE")] NiuThree = 3,
    /// <summary>
    /// 牛四
    /// </summary>
    [pbr::OriginalName("NIU_FOUR")] NiuFour = 4,
    /// <summary>
    /// 牛五
    /// </summary>
    [pbr::OriginalName("NIU_FIVE")] NiuFive = 5,
    /// <summary>
    /// 牛六
    /// </summary>
    [pbr::OriginalName("NIU_SIX")] NiuSix = 6,
    /// <summary>
    /// 牛七
    /// </summary>
    [pbr::OriginalName("NIU_SEVEN")] NiuSeven = 7,
    /// <summary>
    /// 牛八
    /// </summary>
    [pbr::OriginalName("NIU_EIGHT")] NiuEight = 8,
    /// <summary>
    /// 牛九
    /// </summary>
    [pbr::OriginalName("NIU_NINE")] NiuNine = 9,
    /// <summary>
    /// 牛牛
    /// </summary>
    [pbr::OriginalName("NIU_NIU")] NiuNiu = 10,
  }

  public enum WinState {
    /// <summary>
    ///平局
    /// </summary>
    [pbr::OriginalName("DRAW")] Draw = 0,
    /// <summary>
    ///赢
    /// </summary>
    [pbr::OriginalName("WIN")] Win = 1,
    /// <summary>
    ///输
    /// </summary>
    [pbr::OriginalName("FAIL")] Fail = 2,
  }

  /// <summary>
  ///玛丽符号
  /// </summary>
  public enum Mali {
    /// <summary>
    /// 默认值，未指定的符号
    /// </summary>
    [pbr::OriginalName("M_UNSPECIFIED")] MUnspecified = 0,
    /// <summary>
    ///香蕉
    /// </summary>
    [pbr::OriginalName("BANANA")] Banana = 1,
    /// <summary>
    /// 西瓜
    /// </summary>
    [pbr::OriginalName("WATERMELON")] Watermelon = 2,
    /// <summary>
    /// 柠檬
    /// </summary>
    [pbr::OriginalName("LEMON")] Lemon = 3,
    /// <summary>
    /// 葡萄
    /// </summary>
    [pbr::OriginalName("GRAPE")] Grape = 4,
    /// <summary>
    /// 菠萝
    /// </summary>
    [pbr::OriginalName("ANANAS")] Ananas = 5,
    /// <summary>
    ///铃铛
    /// </summary>
    [pbr::OriginalName("BELL")] Bell = 6,
    /// <summary>
    /// 樱桃
    /// </summary>
    [pbr::OriginalName("CHERRY")] Cherry = 7,
    /// <summary>
    /// BAR
    /// </summary>
    [pbr::OriginalName("BAR")] Bar = 8,
    /// <summary>
    /// 珍珠
    /// </summary>
    [pbr::OriginalName("WILD")] Wild = 50,
    /// <summary>
    /// 黄金珍珠
    /// </summary>
    [pbr::OriginalName("GOLD_WILD")] GoldWild = 100,
    /// <summary>
    /// 橙子
    /// </summary>
    [pbr::OriginalName("BONUS")] Bonus = 200,
    /// <summary>
    /// 7
    /// </summary>
    [pbr::OriginalName("SCARRER")] Scarrer = 300,
  }

  /// <summary>
  ///玛丽高级场符号
  /// </summary>
  public enum MaliHigher {
    /// <summary>
    /// 默认值，未指定的符号
    /// </summary>
    [pbr::OriginalName("H_UNSPECIFIED")] HUnspecified = 0,
    /// <summary>
    ///香蕉
    /// </summary>
    [pbr::OriginalName("H_BANANA")] HBanana = 1,
    /// <summary>
    /// 西瓜
    /// </summary>
    [pbr::OriginalName("H_WATERMELON")] HWatermelon = 2,
    /// <summary>
    /// 柠檬
    /// </summary>
    [pbr::OriginalName("H_LEMON")] HLemon = 3,
    /// <summary>
    /// 葡萄
    /// </summary>
    [pbr::OriginalName("H_GRAPE")] HGrape = 4,
    /// <summary>
    /// 菠萝
    /// </summary>
    [pbr::OriginalName("H_ANANAS")] HAnanas = 5,
    /// <summary>
    /// 樱桃
    /// </summary>
    [pbr::OriginalName("H_CHERRY")] HCherry = 6,
    /// <summary>
    /// 橙子
    /// </summary>
    [pbr::OriginalName("H_BONUS")] HBonus = 7,
    /// <summary>
    ///炸药
    /// </summary>
    [pbr::OriginalName("H_DINAMITE")] HDinamite = 100,
  }

  /// <summary>
  ///----------麻将2-------
  ///麻将符号
  /// </summary>
  public enum MJ {
    /// <summary>
    /// 默认值，未指定的符号
    /// </summary>
    [pbr::OriginalName("DEFAULT")] Default = 0,
    /// <summary>
    /// 发
    /// </summary>
    [pbr::OriginalName("FA")] Fa = 9,
    /// <summary>
    /// 中
    /// </summary>
    [pbr::OriginalName("ZHO")] Zho = 8,
    /// <summary>
    /// 框
    /// </summary>
    [pbr::OriginalName("KUANG")] Kuang = 7,
    /// <summary>
    /// 8万
    /// </summary>
    [pbr::OriginalName("W_8")] W8 = 6,
    /// <summary>
    /// 五饼
    /// </summary>
    [pbr::OriginalName("B_5")] B5 = 5,
    /// <summary>
    /// 五条
    /// </summary>
    [pbr::OriginalName("T_5")] T5 = 4,
    /// <summary>
    ///三饼
    /// </summary>
    [pbr::OriginalName("B_3")] B3 = 3,
    /// <summary>
    /// 2饼
    /// </summary>
    [pbr::OriginalName("B_2")] B2 = 2,
    /// <summary>
    /// 2条
    /// </summary>
    [pbr::OriginalName("T_2")] T2 = 1,
    /// <summary>
    ///胡
    /// </summary>
    [pbr::OriginalName("HU")] Hu = 50,
    /// <summary>
    /// 百搭
    /// </summary>
    [pbr::OriginalName("BAIDA")] Baida = 60,
  }

  /// <summary>
  /// FishType 枚举
  /// </summary>
  public enum FishType {
    /// <summary>
    /// 默认
    /// </summary>
    [pbr::OriginalName("FT_DEFAULT")] FtDefault = 0,
    /// <summary>
    /// 孔雀鱼
    /// </summary>
    [pbr::OriginalName("KONG_QUE_YU")] KongQueYu = 1,
    /// <summary>
    /// 小丑鱼
    /// </summary>
    [pbr::OriginalName("XIAO_CHOU_YU")] XiaoChouYu = 2,
    /// <summary>
    /// 小蓝鱼
    /// </summary>
    [pbr::OriginalName("XIAO_LAN_YU")] XiaoLanYu = 3,
    /// <summary>
    /// 小青鱼
    /// </summary>
    [pbr::OriginalName("XIAO_QING_YU")] XiaoQingYu = 4,
    /// <summary>
    /// 小黄鱼
    /// </summary>
    [pbr::OriginalName("XIAO_HUANG_YU")] XiaoHuangYu = 5,
    /// <summary>
    /// 彩云鱼
    /// </summary>
    [pbr::OriginalName("CAI_YUN_YU")] CaiYunYu = 6,
    /// <summary>
    /// 金枪鱼
    /// </summary>
    [pbr::OriginalName("JIN_QIANG_YU")] JinQiangYu = 7,
    /// <summary>
    /// 灯笼鱼
    /// </summary>
    [pbr::OriginalName("DENG_LONG_YU")] DengLongYu = 8,
    /// <summary>
    /// 大眼睛鱼
    /// </summary>
    [pbr::OriginalName("DA_YAN_JING_YU")] DaYanJingYu = 9,
    /// <summary>
    /// 刺猬鱼
    /// </summary>
    [pbr::OriginalName("CI_WEI_YU")] CiWeiYu = 10,
    /// <summary>
    /// 石斑鱼
    /// </summary>
    [pbr::OriginalName("SHI_BAN_YU")] ShiBanYu = 11,
    /// <summary>
    /// 神仙鱼
    /// </summary>
    [pbr::OriginalName("SHEN_XIAN_YU")] ShenXianYu = 12,
    /// <summary>
    /// 蝴蝶鱼
    /// </summary>
    [pbr::OriginalName("HU_DIE_YU")] HuDieYu = 13,
    /// <summary>
    /// 蟋蟀鱼
    /// </summary>
    [pbr::OriginalName("XI_SHUAI_YU")] XiShuaiYu = 14,
    /// <summary>
    /// 魔鬼鱼
    /// </summary>
    [pbr::OriginalName("MO_GUI_YU")] MoGuiYu = 15,
    /// <summary>
    /// 乌龟
    /// </summary>
    [pbr::OriginalName("WU_GUI")] WuGui = 16,
    /// <summary>
    /// 银色鲨鱼
    /// </summary>
    [pbr::OriginalName("YIN_SHA_YU")] YinShaYu = 17,
    /// <summary>
    /// 金色鲨鱼
    /// </summary>
    [pbr::OriginalName("JIN_SHA_YU")] JinShaYu = 18,
    /// <summary>
    ///金龙
    /// </summary>
    [pbr::OriginalName("JIN_LONG_YU")] JinLongYu = 19,
    /// <summary>
    ///龙
    /// </summary>
    [pbr::OriginalName("LONG")] Long = 20,
    /// <summary>
    /// 美人鱼
    /// </summary>
    [pbr::OriginalName("MEI_REN_YU")] MeiRenYu = 21,
    /// <summary>
    /// 哪吒
    /// </summary>
    [pbr::OriginalName("NE_ZHA")] NeZha = 22,
    /// <summary>
    /// 齐天大圣
    /// </summary>
    [pbr::OriginalName("MONKEY")] Monkey = 23,
  }

  /// <summary>
  /// 火力类型
  /// </summary>
  public enum FishFire {
    /// <summary>
    /// 默认
    /// </summary>
    [pbr::OriginalName("FFT_DEFAULT")] FftDefault = 0,
    /// <summary>
    /// 普通炮弹- 1
    /// </summary>
    [pbr::OriginalName("FFT_1")] Fft1 = 1,
    /// <summary>
    /// 普通炮弹- 2
    /// </summary>
    [pbr::OriginalName("FFT_2")] Fft2 = 2,
    /// <summary>
    /// 普通炮弹- 3
    /// </summary>
    [pbr::OriginalName("FFT_3")] Fft3 = 3,
    /// <summary>
    ///普通炮弹- 4
    /// </summary>
    [pbr::OriginalName("FFT_4")] Fft4 = 4,
    /// <summary>
    ///普通炮弹- 5
    /// </summary>
    [pbr::OriginalName("FFT_5")] Fft5 = 5,
    [pbr::OriginalName("FFT_6")] Fft6 = 6,
    [pbr::OriginalName("FFT_7")] Fft7 = 7,
    [pbr::OriginalName("FFT_8")] Fft8 = 8,
    [pbr::OriginalName("FFT_9")] Fft9 = 9,
    [pbr::OriginalName("FFT_10")] Fft10 = 10,
  }

  /// <summary>
  ///九线拉王
  /// </summary>
  public enum LINE9 {
    /// <summary>
    /// 默认值，未指定的符号
    /// </summary>
    [pbr::OriginalName("L9_UNSPECIFIED")] L9Unspecified = 0,
    /// <summary>
    /// 菠萝
    /// </summary>
    [pbr::OriginalName("L9_ANANAS")] L9Ananas = 1,
    /// <summary>
    ///香蕉
    /// </summary>
    [pbr::OriginalName("L9_BANANA")] L9Banana = 2,
    /// <summary>
    ///铃铛
    /// </summary>
    [pbr::OriginalName("L9_BELL")] L9Bell = 3,
    /// <summary>
    /// 葡萄
    /// </summary>
    [pbr::OriginalName("L9_GRAPE")] L9Grape = 4,
    /// <summary>
    /// 樱桃
    /// </summary>
    [pbr::OriginalName("L9_CHERRY")] L9Cherry = 5,
    /// <summary>
    /// 苹果
    /// </summary>
    [pbr::OriginalName("L9_APPLE")] L9Apple = 6,
    /// <summary>
    /// 西瓜
    /// </summary>
    [pbr::OriginalName("L9_WATERMELON")] L9Watermelon = 7,
    /// <summary>
    /// 芒果
    /// </summary>
    [pbr::OriginalName("L9_MANGO")] L9Mango = 8,
    /// <summary>
    /// 橙子
    /// </summary>
    [pbr::OriginalName("L9_ORAGE")] L9Orage = 9,
    /// <summary>
    /// 荔枝
    /// </summary>
    [pbr::OriginalName("L9_LICHEE")] L9Lichee = 10,
    /// <summary>
    /// BAR
    /// </summary>
    [pbr::OriginalName("L9_BAR")] L9Bar = 11,
    /// <summary>
    /// 7
    /// </summary>
    [pbr::OriginalName("L9_7")] L97 = 77,
    /// <summary>
    /// 钻石
    /// </summary>
    [pbr::OriginalName("L9_DIAMOND")] L9Diamond = 100,
    /// <summary>
    /// 宝箱
    /// </summary>
    [pbr::OriginalName("L9_BOX")] L9Box = 200,
  }

  /// <summary>
  ///少林足球
  /// </summary>
  public enum FOOTBALL {
    /// <summary>
    /// 默认值，未指定的符号
    /// </summary>
    [pbr::OriginalName("FT_UNSPECIFIED")] FtUnspecified = 0,
    /// <summary>
    /// 10
    /// </summary>
    [pbr::OriginalName("FT_10")] Ft10 = 1,
    /// <summary>
    ///11
    /// </summary>
    [pbr::OriginalName("FT_11")] Ft11 = 2,
    /// <summary>
    ///12
    /// </summary>
    [pbr::OriginalName("FT_12")] Ft12 = 3,
    /// <summary>
    ///13
    /// </summary>
    [pbr::OriginalName("FT_13")] Ft13 = 4,
    /// <summary>
    /// A
    /// </summary>
    [pbr::OriginalName("FT_A")] FtA = 5,
    /// <summary>
    /// 和尚1-黄色
    /// </summary>
    [pbr::OriginalName("FT_MONK1")] FtMonk1 = 6,
    /// <summary>
    /// 和尚2-红色
    /// </summary>
    [pbr::OriginalName("FT_MONK2")] FtMonk2 = 7,
    /// <summary>
    ///和尚3 -紫色
    /// </summary>
    [pbr::OriginalName("FT_MONK3")] FtMonk3 = 8,
    /// <summary>
    /// 和尚4-蓝色
    /// </summary>
    [pbr::OriginalName("FT_MONK4")] FtMonk4 = 9,
    /// <summary>
    /// 和尚5-绿色
    /// </summary>
    [pbr::OriginalName("FT_MONK5")] FtMonk5 = 10,
    /// <summary>
    /// 百搭
    /// </summary>
    [pbr::OriginalName("FT_BAIDA")] FtBaida = 100,
    /// <summary>
    ///夺宝符号
    /// </summary>
    [pbr::OriginalName("FT_SCATTER")] FtScatter = 200,
  }

  /// <summary>
  ///阿拉丁
  /// </summary>
  public enum Aladdin {
    /// <summary>
    /// 默认值，未指定的符号
    /// </summary>
    [pbr::OriginalName("A_UNSPECIFIED")] AUnspecified = 0,
    /// <summary>
    /// 10
    /// </summary>
    [pbr::OriginalName("A_10")] A10 = 1,
    /// <summary>
    ///11
    /// </summary>
    [pbr::OriginalName("A_11")] A11 = 2,
    /// <summary>
    ///12
    /// </summary>
    [pbr::OriginalName("A_12")] A12 = 3,
    /// <summary>
    ///13
    /// </summary>
    [pbr::OriginalName("A_13")] A13 = 4,
    /// <summary>
    /// A
    /// </summary>
    [pbr::OriginalName("A_A")] AA = 5,
    /// <summary>
    ///奖杯
    /// </summary>
    [pbr::OriginalName("A_CUP")] ACup = 6,
    /// <summary>
    /// 刀
    /// </summary>
    [pbr::OriginalName("A_Knife")] AKnife = 7,
    /// <summary>
    ///戒指
    /// </summary>
    [pbr::OriginalName("A_Ring")] ARing = 8,
    /// <summary>
    ///项链
    /// </summary>
    [pbr::OriginalName("A_TORQUE")] ATorque = 9,
    /// <summary>
    /// 帽子
    /// </summary>
    [pbr::OriginalName("A_HAT")] AHat = 10,
    /// <summary>
    /// 夺宝
    /// </summary>
    [pbr::OriginalName("A_FREE")] AFree = 50,
    /// <summary>
    /// 百搭
    /// </summary>
    [pbr::OriginalName("A_BAIDA")] ABaida = 60,
  }

  /// <summary>
  ///冰球突破
  /// </summary>
  public enum Puck {
    /// <summary>
    /// 默认值，未指定的符号
    /// </summary>
    [pbr::OriginalName("P_UNSPECIFIED")] PUnspecified = 0,
    /// <summary>
    /// 汽车
    /// </summary>
    [pbr::OriginalName("P_CAR")] PCar = 1,
    /// <summary>
    ///鞋
    /// </summary>
    [pbr::OriginalName("P_SHOE")] PShoe = 2,
    /// <summary>
    ///棍子
    /// </summary>
    [pbr::OriginalName("P_STICK")] PStick = 3,
    /// <summary>
    ///球
    /// </summary>
    [pbr::OriginalName("P_PUCK")] PPuck = 4,
    /// <summary>
    /// 两个人
    /// </summary>
    [pbr::OriginalName("P_TWO")] PTwo = 5,
    /// <summary>
    /// 绿色胖子
    /// </summary>
    [pbr::OriginalName("P_G_FAT")] PGFat = 6,
    /// <summary>
    ///蓝色胖子
    /// </summary>
    [pbr::OriginalName("P_B_FAT")] PBFat = 7,
    /// <summary>
    /// 绿色瘦子
    /// </summary>
    [pbr::OriginalName("P_G_THIN")] PGThin = 8,
    /// <summary>
    ///红色瘦子
    /// </summary>
    [pbr::OriginalName("P_R_THIN")] PRThin = 9,
    /// <summary>
    /// SCATTER
    /// </summary>
    [pbr::OriginalName("P_FREE")] PFree = 50,
    /// <summary>
    /// 百搭
    /// </summary>
    [pbr::OriginalName("P_BAIDA")] PBaida = 60,
  }

  /// <summary>
  ///水浒传-----------------start
  ///水浒传
  /// </summary>
  public enum WaterMargin {
    /// <summary>
    /// 默认值，未指定的符号
    /// </summary>
    [pbr::OriginalName("WM_UNSPECIFIED")] WmUnspecified = 0,
    /// <summary>
    /// 斧子
    /// </summary>
    [pbr::OriginalName("WM_AXE")] WmAxe = 1,
    /// <summary>
    ///长枪
    /// </summary>
    [pbr::OriginalName("WM_SPEAR")] WmSpear = 2,
    /// <summary>
    ///刀
    /// </summary>
    [pbr::OriginalName("WM_CUT")] WmCut = 3,
    /// <summary>
    ///鲁智深
    /// </summary>
    [pbr::OriginalName("WM_LU")] WmLu = 4,
    /// <summary>
    /// 林冲
    /// </summary>
    [pbr::OriginalName("WM_LIN")] WmLin = 5,
    /// <summary>
    /// 宋江
    /// </summary>
    [pbr::OriginalName("WM_SONG")] WmSong = 6,
    /// <summary>
    /// 替天行道
    /// </summary>
    [pbr::OriginalName("WM_DAO")] WmDao = 7,
    /// <summary>
    /// 忠义堂
    /// </summary>
    [pbr::OriginalName("WM_TANG")] WmTang = 8,
    /// <summary>
    /// 水浒传-触发高级玩法小玛丽的图标
    /// </summary>
    [pbr::OriginalName("WM_HIGHER")] WmHigher = 50,
  }

  /// <summary>
  ///水浒传-小玛丽高级场符号
  /// </summary>
  public enum WMHigher {
    /// <summary>
    /// 默认值，未指定的符号
    /// </summary>
    [pbr::OriginalName("WH_UNSPECIFIED")] WhUnspecified = 0,
    /// <summary>
    /// 斧子
    /// </summary>
    [pbr::OriginalName("WH_AXE")] WhAxe = 1,
    /// <summary>
    ///长枪
    /// </summary>
    [pbr::OriginalName("WH_SPEAR")] WhSpear = 2,
    /// <summary>
    ///刀
    /// </summary>
    [pbr::OriginalName("WH_CUT")] WhCut = 3,
    /// <summary>
    ///鲁智深
    /// </summary>
    [pbr::OriginalName("WH_LU")] WhLu = 4,
    /// <summary>
    /// 林冲
    /// </summary>
    [pbr::OriginalName("WH_LIN")] WhLin = 5,
    /// <summary>
    /// 宋江
    /// </summary>
    [pbr::OriginalName("WH_SONG")] WhSong = 6,
    /// <summary>
    /// 替天行道
    /// </summary>
    [pbr::OriginalName("WH_DAO")] WhDao = 7,
    /// <summary>
    /// 忠义堂
    /// </summary>
    [pbr::OriginalName("WH_TANG")] WhTang = 8,
    /// <summary>
    /// 退出
    /// </summary>
    [pbr::OriginalName("WH_EXIT")] WhExit = 100,
  }

  /// <summary>
  ///水浒传-比倍
  /// </summary>
  public enum WMDice {
    /// <summary>
    /// 默认值，未指定的符号
    /// </summary>
    [pbr::OriginalName("WD_UNSPECIFIED")] WdUnspecified = 0,
    /// <summary>
    /// 小
    /// </summary>
    [pbr::OriginalName("WD_SMALL")] WdSmall = 1,
    /// <summary>
    /// 和
    /// </summary>
    [pbr::OriginalName("WD_TIE")] WdTie = 2,
    /// <summary>
    /// 大
    /// </summary>
    [pbr::OriginalName("WD_BIG")] WdBig = 3,
  }

  /// <summary>
  ///水浒传-----------------end
  ///金猪送福
  /// </summary>
  public enum Pig {
    /// <summary>
    /// 默认值，未指定的符号
    /// </summary>
    [pbr::OriginalName("PG_UNSPECIFIED")] PgUnspecified = 0,
    /// <summary>
    /// 九
    /// </summary>
    [pbr::OriginalName("PG_9")] Pg9 = 1,
    /// <summary>
    ///十
    /// </summary>
    [pbr::OriginalName("PG_10")] Pg10 = 2,
    /// <summary>
    ///11
    /// </summary>
    [pbr::OriginalName("PG_11")] Pg11 = 3,
    /// <summary>
    ///12
    /// </summary>
    [pbr::OriginalName("PG_12")] Pg12 = 4,
    /// <summary>
    /// 13
    /// </summary>
    [pbr::OriginalName("PG_13")] Pg13 = 5,
    /// <summary>
    /// 太
    /// </summary>
    [pbr::OriginalName("PG_TAI")] PgTai = 6,
    /// <summary>
    /// 铜钱
    /// </summary>
    [pbr::OriginalName("PG_COPPER")] PgCopper = 7,
    /// <summary>
    /// 荷花
    /// </summary>
    [pbr::OriginalName("PG_LOTUS")] PgLotus = 8,
    /// <summary>
    /// 灯笼
    /// </summary>
    [pbr::OriginalName("PG_GLIM")] PgGlim = 9,
    /// <summary>
    /// 福
    /// </summary>
    [pbr::OriginalName("PG_FU")] PgFu = 10,
    /// <summary>
    /// 鱼
    /// </summary>
    [pbr::OriginalName("PG_FISH")] PgFish = 11,
    /// <summary>
    /// 免费次数-福
    /// </summary>
    [pbr::OriginalName("PG_FREE")] PgFree = 50,
    /// <summary>
    /// 百搭
    /// </summary>
    [pbr::OriginalName("PG_WILD")] PgWild = 60,
  }

  /// <summary>
  ///僵尸新娘
  /// </summary>
  public enum Corpse {
    /// <summary>
    /// 默认值，未指定的符号
    /// </summary>
    [pbr::OriginalName("C_UNSPECIFIED")] CUnspecified = 0,
    /// <summary>
    ///十
    /// </summary>
    [pbr::OriginalName("C_10")] C10 = 1,
    /// <summary>
    ///11
    /// </summary>
    [pbr::OriginalName("C_11")] C11 = 2,
    /// <summary>
    ///12
    /// </summary>
    [pbr::OriginalName("C_12")] C12 = 3,
    /// <summary>
    /// 13
    /// </summary>
    [pbr::OriginalName("C_13")] C13 = 4,
    /// <summary>
    /// A
    /// </summary>
    [pbr::OriginalName("C_A")] CA = 5,
    /// <summary>
    ///骷髅
    /// </summary>
    [pbr::OriginalName("C_Skull")] CSkull = 6,
    /// <summary>
    /// 小孩
    /// </summary>
    [pbr::OriginalName("C_BOY")] CBoy = 7,
    /// <summary>
    /// 男僵尸
    /// </summary>
    [pbr::OriginalName("C_MAN")] CMan = 8,
    /// <summary>
    /// 新娘
    /// </summary>
    [pbr::OriginalName("C_BRIDE")] CBride = 9,
    /// <summary>
    /// 免费次数
    /// </summary>
    [pbr::OriginalName("C_FREE")] CFree = 50,
    /// <summary>
    /// 百搭
    /// </summary>
    [pbr::OriginalName("C_WILD")] CWild = 60,
    /// <summary>
    ///进入小游戏图标
    /// </summary>
    [pbr::OriginalName("C_BONUS")] CBonus = 100,
  }

  #endregion

  #region Messages
  /// <summary>
  /// 卡牌数据
  /// </summary>
  public sealed partial class Card : pb::IMessage<Card>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Card> _parser = new pb::MessageParser<Card>(() => new Card());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Card> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Z.Model.Proto.CommonGameReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Card() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Card(Card other) : this() {
      id_ = other.id_;
      suit_ = other.suit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Card Clone() {
      return new Card(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "suit" field.</summary>
    public const int SuitFieldNumber = 2;
    private global::Com.Z.Model.Proto.CardSuit suit_ = global::Com.Z.Model.Proto.CardSuit.Spades;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Z.Model.Proto.CardSuit Suit {
      get { return suit_; }
      set {
        suit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Card);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Card other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Suit != other.Suit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Suit != global::Com.Z.Model.Proto.CardSuit.Spades) hash ^= Suit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Suit != global::Com.Z.Model.Proto.CardSuit.Spades) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Suit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Suit != global::Com.Z.Model.Proto.CardSuit.Spades) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Suit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Suit != global::Com.Z.Model.Proto.CardSuit.Spades) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Suit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Card other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Suit != global::Com.Z.Model.Proto.CardSuit.Spades) {
        Suit = other.Suit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Suit = (global::Com.Z.Model.Proto.CardSuit) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Suit = (global::Com.Z.Model.Proto.CardSuit) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
